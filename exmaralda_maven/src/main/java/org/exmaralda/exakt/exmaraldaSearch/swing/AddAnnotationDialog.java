/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

 /*
 * AddAnnotationDialog.java
 *
 * Created on 06.08.2010, 14:21:01
 */
package org.exmaralda.exakt.exmaraldaSearch.swing;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashSet;
import javax.swing.DefaultComboBoxModel;
import org.exmaralda.exakt.search.SearchResultList;

/**
 *
 * @author thomas
 */
public class AddAnnotationDialog extends javax.swing.JDialog {

    /**
     * Creates new form AddAnnotationDialog
     */
    public AddAnnotationDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        typePanel = new javax.swing.JPanel();
        exactLabel = new javax.swing.JLabel();
        includedLabel = new javax.swing.JLabel();
        anyLabel = new javax.swing.JLabel();
        exactRadioButton = new javax.swing.JRadioButton();
        includedRadioButton = new javax.swing.JRadioButton();
        anyRadioButton = new javax.swing.JRadioButton();
        categoryPanel = new javax.swing.JPanel();
        categoryComboBox = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add annotation");

        typePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Overlap type"));
        typePanel.setLayout(new java.awt.GridLayout(2, 3));

        exactLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        exactLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/exmaralda/exakt/exmaraldaSearch/swing/resources/exact.png"))); // NOI18N
        typePanel.add(exactLabel);

        includedLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        includedLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/exmaralda/exakt/exmaraldaSearch/swing/resources/included.png"))); // NOI18N
        typePanel.add(includedLabel);

        anyLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        anyLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/exmaralda/exakt/exmaraldaSearch/swing/resources/any.png"))); // NOI18N
        typePanel.add(anyLabel);

        buttonGroup1.add(exactRadioButton);
        exactRadioButton.setSelected(true);
        exactRadioButton.setText("Exact");
        exactRadioButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        typePanel.add(exactRadioButton);

        buttonGroup1.add(includedRadioButton);
        includedRadioButton.setText("Included in");
        includedRadioButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        typePanel.add(includedRadioButton);

        buttonGroup1.add(anyRadioButton);
        anyRadioButton.setText("Any");
        anyRadioButton.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        typePanel.add(anyRadioButton);

        getContentPane().add(typePanel, java.awt.BorderLayout.CENTER);

        categoryPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Annotation Category"));

        categoryComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        categoryComboBox.setPreferredSize(new java.awt.Dimension(200, 20));
        categoryPanel.add(categoryComboBox);

        getContentPane().add(categoryPanel, java.awt.BorderLayout.PAGE_START);

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        jPanel1.add(okButton);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        dispose();
    }//GEN-LAST:event_okButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                AddAnnotationDialog dialog = new AddAnnotationDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel anyLabel;
    private javax.swing.JRadioButton anyRadioButton;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox categoryComboBox;
    private javax.swing.JPanel categoryPanel;
    private javax.swing.JLabel exactLabel;
    private javax.swing.JRadioButton exactRadioButton;
    private javax.swing.JLabel includedLabel;
    private javax.swing.JRadioButton includedRadioButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton okButton;
    private javax.swing.JPanel typePanel;
    // End of variables declaration//GEN-END:variables

    public void setCategories(HashSet<String> annotationNames) {
        DefaultComboBoxModel dcbm = new DefaultComboBoxModel();
        //here the sorting alphabetically should be done
        ArrayList<String> sortedListann = new ArrayList<String>(annotationNames);
        Collections.sort(sortedListann, new SortIgnoreCase());
        for (String s : sortedListann) {
            dcbm.addElement(s);
        }
        categoryComboBox.setModel(dcbm);
    }

    public String getCategory() {
        return (String) (categoryComboBox.getSelectedItem());
    }

    public int getOverlapType() {
        if (exactRadioButton.isSelected()) {
            return SearchResultList.EXACT_OVERLAP;
        } else if (anyRadioButton.isSelected()) {
            return SearchResultList.ANY_OVERLAP;
        }
        return SearchResultList.INCLUDED_IN;
    }

    public class SortIgnoreCase implements Comparator<Object> {

        public int compare(Object o1, Object o2) {
            String s1 = (String) o1;
            String s2 = (String) o2;
            return s1.toLowerCase().compareTo(s2.toLowerCase());
        }
    }
}
