/*
 * COMACorpusListInternalFrame.java
 *
 * Created on 17. Januar 2007, 15:20
 */

package org.exmaralda.exakt.exmaraldaSearch.swing;

import org.exmaralda.exakt.search.SearchEvent;
import java.io.*;
import javax.swing.*;
import org.jdom.JDOMException;
import java.awt.event.*;
import org.exmaralda.exakt.exmaraldaSearch.*;



/**
 *
 * @author  thomas
 */
public class COMACorpusListInternalFrame extends javax.swing.JInternalFrame implements org.exmaralda.exakt.search.SearchListenerInterface {
        
    DefaultListModel listModel = new DefaultListModel();
    String progressString;
    int currentProgress;
    boolean isOpening = false;
    public final static int UPDATE_TIME = 100;
    javax.swing.Timer timer;
    
    
    /** Creates new form COMACorpusListInternalFrame */
    public COMACorpusListInternalFrame() {
        initComponents();
        corpusList.setCellRenderer(new COMACorpusListCellRenderer());
        corpusList.setModel(listModel);
        timer = new javax.swing.Timer(UPDATE_TIME, new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                if (!isOpening) return;
                progressBar.setValue(currentProgress);
                progressBar.setString(progressString);
            }
        });
        timer.start();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        corpusListScrollPane = new javax.swing.JScrollPane();
        corpusList = new javax.swing.JList();
        buttonsPanel = new javax.swing.JPanel();
        openCorpusButton = new javax.swing.JButton();
        progressBarPanel = new javax.swing.JPanel();
        progressBar = new javax.swing.JProgressBar();

        setResizable(true);
        setTitle("COMA Corpora");
        setPreferredSize(new java.awt.Dimension(400, 200));
        corpusList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        corpusListScrollPane.setViewportView(corpusList);

        getContentPane().add(corpusListScrollPane, java.awt.BorderLayout.CENTER);

        buttonsPanel.setLayout(new javax.swing.BoxLayout(buttonsPanel, javax.swing.BoxLayout.X_AXIS));

        openCorpusButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/exmaralda/exakt/exmaraldaSearch/swing/resources/Open.gif")));
        openCorpusButton.setText("Open corpus...");
        openCorpusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openCorpusButtonActionPerformed(evt);
                jButton1ActionPerformed(evt);
            }
        });

        buttonsPanel.add(openCorpusButton);

        getContentPane().add(buttonsPanel, java.awt.BorderLayout.NORTH);

        progressBarPanel.setLayout(new javax.swing.BoxLayout(progressBarPanel, javax.swing.BoxLayout.X_AXIS));

        progressBar.setStringPainted(true);
        progressBarPanel.add(progressBar);

        getContentPane().add(progressBarPanel, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void openCorpusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openCorpusButtonActionPerformed
        openCorpus();
    }//GEN-LAST:event_openCorpusButtonActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonsPanel;
    private javax.swing.JList corpusList;
    private javax.swing.JScrollPane corpusListScrollPane;
    private javax.swing.JButton openCorpusButton;
    private javax.swing.JProgressBar progressBar;
    private javax.swing.JPanel progressBarPanel;
    // End of variables declaration//GEN-END:variables
    
    private void openCorpus(){
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setDialogTitle("Open COMA Corpus file");
        fileChooser.setFileFilter(new javax.swing.filechooser.FileFilter() {
            public boolean accept(File f) {
                String name = f.getAbsolutePath();
                return (f.isDirectory() || name.substring(Math.max(0,name.length()-3)).equalsIgnoreCase("XML"));
            }
            public String getDescription() {
                return "XML files (*.xml)";
            }
        });
        fileChooser.showOpenDialog(this);
        final File file = fileChooser.getSelectedFile();
        final COMACorpus corpus = new COMACorpus();
        corpus.addSearchListener(this);
        isOpening = true;
        Thread openThread = new Thread(){
            public void run(){
                try {
                    corpus.readCorpus(file);
                    listModel.addElement(corpus);
                    isOpening = false;
                    progressBar.setValue(100);
                    progressBar.setString("Done.");
                } catch (JDOMException ex) {
                    ex.printStackTrace();
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            }
        };
        openThread.start();
            
    }

    public void processSearchEvent(SearchEvent se) {
        progressString = (String)(se.getData());
        progressString = progressString.substring(Math.max(0,progressString.length()-40));
        currentProgress = (int)Math.round(se.getProgress()*100);        
    }
    
    COMACorpus getSelectedCorpus(){
        return (COMACorpus)(corpusList.getSelectedValue());
    }
    
}
