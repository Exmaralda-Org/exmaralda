/*
 * EditTiersDialog.java
 *
 * Created on 14. November 2007, 13:44
 */

package org.exmaralda.partitureditor.jexmaraldaswing;

import org.exmaralda.common.helpers.Internationalizer;
import org.exmaralda.partitureditor.jexmaralda.*;
import org.exmaralda.partitureditor.partiture.PartiturEditor;
import org.exmaralda.partitureditor.partiture.PartitureTableWithActions;

/**
 *
 * @author  thomas
 */
public class EditTiersDialog extends OKCancelDialog {
    
    private String[] speakers;
    private String[] speakerIDs;
    
    int COLUMN_COUNT = 9;
    
    BasicTranscription transcription;
    
    java.awt.Frame parentFrame;

    /** Creates new form EditTiersDialog */
    public EditTiersDialog(java.awt.Frame parent, boolean modal, BasicTranscription t) {
        super(parent, modal);
        setTitle("Edit tiers");
        transcription = t.makeCopy();
        initComponents();
        populateTable();
        parentFrame = parent;
        Internationalizer.internationalizeDialogToolTips(this);        
    }
    
    public BasicTranscription getTranscription(){
        return transcription;
    }
    
    private void populateTable(){
        int tierCount = transcription.getBody().getNumberOfTiers();
        int[] parentCheck = transcription.checkAnnotationTierDependencies();
        int[] mismatches = transcription.checkAnnotationMismatches();
        String[][] values = new String[tierCount][COLUMN_COUNT];
        for (int pos=0; pos<tierCount; pos++){
            Tier t = transcription.getBody().getTierAt(pos);
            String[] v = new String[COLUMN_COUNT];
            v[0] = t.getDisplayName();
            v[1] = t.getCategory();
            v[2] = t.getType();
            v[3] = t.getID();
            if (t.getSpeaker()==null){
              v[4] = "#No speaker";
              v[5] = "#No speaker";
            } else {
                try {
                    Speaker speaker = transcription.getHead().getSpeakertable().getSpeakerWithID(t.getSpeaker());
                    v[4] = speaker.getAbbreviation();
                } catch (JexmaraldaException je){
                    v[4] = "#Error";
                }
                v[5] = t.getSpeaker();
            }
            v[6] = Integer.toString(t.getNumberOfEvents());
            switch (parentCheck[pos]){
                case -1 : v[7] = "n.a."; break;
                case 0 : v[7] = "#Error"; break;
                case 1 : v[7] = "OK"; break;
            }
            switch (mismatches[pos]){
                case -1 : v[8] = "n.a."; break;
                case 0 : v[8] = "OK"; break;
                default : v[8] = "#" + Integer.toString(mismatches[pos]); break;
            }
            values[pos] = v;
        }
        tierTable.setModel(new javax.swing.table.DefaultTableModel(values, 
                new String [] {
            "Display name", "Category", "Type", "ID", "Speaker", "Speaker ID", "Number of Events", "Parent Tier", "Annotation Mismatches"
        }));
        if (tierCount>0){
            tierTable.getSelectionModel().setSelectionInterval(0,0);
            editTierButton.setEnabled(true);
        } else {
            editTierButton.setEnabled(false);            
        }
        //pack();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tierTable = new javax.swing.JTable();
        lateralButtonPanel = new javax.swing.JPanel();
        editTierButton = new javax.swing.JButton();
        hideTiersButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        mainPanel.setPreferredSize(new java.awt.Dimension(800, 275));
        mainPanel.setLayout(new javax.swing.BoxLayout(mainPanel, javax.swing.BoxLayout.LINE_AXIS));

        jScrollPane1.setPreferredSize(new java.awt.Dimension(500, 275));

        tierTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"x", "x", "x", "x", "x", null, null, "x", null}
            },
            new String [] {
                "Display name", "Category", "Type", "ID", "Speaker", "Speaker ID", "Number of Events", "Parent Tier", "Annotation Mismatches"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tierTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                tierTableMouseReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tierTable);

        mainPanel.add(jScrollPane1);

        getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);

        lateralButtonPanel.setLayout(new javax.swing.BoxLayout(lateralButtonPanel, javax.swing.BoxLayout.Y_AXIS));

        editTierButton.setText("Edit tier...");
        editTierButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editTierButtonActionPerformed(evt);
                jButton1ActionPerformed(evt);
            }
        });
        lateralButtonPanel.add(editTierButton);

        hideTiersButton.setText("Hide tiers...");
        hideTiersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hideTiersButtonActionPerformed(evt);
            }
        });
        lateralButtonPanel.add(hideTiersButton);

        getContentPane().add(lateralButtonPanel, java.awt.BorderLayout.EAST);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void editTierButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editTierButtonActionPerformed
        int tierPos = tierTable.getSelectedRow();
        EditTierDialog dialog = new EditTierDialog(parentFrame, true, transcription, tierPos);
        if (dialog.editTier()){
            Tier newTier = dialog.getTier();
            try {
                Tier tier = transcription.getBody().getTierWithID(newTier.getID());
                tier.setSpeaker(newTier.getSpeaker());
                tier.setType(newTier.getType());
                tier.setCategory(newTier.getCategory());
                tier.setDisplayName(newTier.getDisplayName());
                tier.setUDTierInformation(newTier.getUDTierInformation());
                populateTable();
            } catch (JexmaraldaException ex) {
                ex.printStackTrace();
           }            
        }
    }//GEN-LAST:event_editTierButtonActionPerformed

    private void hideTiersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hideTiersButtonActionPerformed

        // by Torben Schinke
        if (parentFrame instanceof PartiturEditor){
        	PartiturEditor parent = (PartiturEditor)parentFrame;
                PartitureTableWithActions table = parent.getPartitur();
        	for (int rowIdx:tierTable.getSelectedRows()){
            	table.setRowHidden(rowIdx, true);
            }

        	table.getModel().fireAreaChanged(0, table.getModel().getNumColumns());

        }

    }//GEN-LAST:event_hideTiersButtonActionPerformed

    private void tierTableMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tierTableMouseReleased
        hideTiersButton.setEnabled(tierTable.getSelectedRows().length>0);
    }//GEN-LAST:event_tierTableMouseReleased
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
    }
    
    public boolean editTiers(){
        java.awt.Dimension dialogSize = this.getPreferredSize();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(screenSize.width/2 - dialogSize.width/2, screenSize.height/2 - dialogSize.height/2);        
        setVisible(true);
        return (getReturnStatus()==1);
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton editTierButton;
    private javax.swing.JButton hideTiersButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel lateralButtonPanel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JTable tierTable;
    // End of variables declaration//GEN-END:variables
    
}
