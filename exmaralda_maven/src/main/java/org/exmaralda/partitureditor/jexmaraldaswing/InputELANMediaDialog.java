/*
 * InputELANMediaDialog.java
 *
 * Created on 9. Februar 2004, 11:14
 */

package org.exmaralda.partitureditor.jexmaraldaswing;

import org.exmaralda.partitureditor.jexmaralda.UDInformationHashtable;
import org.exmaralda.partitureditor.jexmaralda.BasicTranscription;
import org.exmaralda.partitureditor.jexmaralda.*;

/**
 *
 * @author  thomas
 */
public class InputELANMediaDialog extends javax.swing.JDialog {
    
    static String[] MIME_TYPES = {"audio/x-aiff", "audio/x-wav", "video/mpeg", "video/quicktime"};
    boolean userAccepts = false;
    BasicTranscription transcription;
    
    /** Creates new form InputELANMediaDialog */
    public InputELANMediaDialog(java.awt.Frame parent, boolean modal, BasicTranscription t) {
        super(parent, modal);
        transcription = t;
        UDInformationHashtable udInfo = transcription.getHead().getMetaInformation().getUDMetaInformation();
        if (!udInfo.containsAttribute("ELAN-Media-File")){
            udInfo.setAttribute("ELAN-Media-File", transcription.getHead().getMetaInformation().getReferencedFile());
        }
        if (!udInfo.containsAttribute("ELAN-Mime-Type")){
            udInfo.setAttribute("ELAN-Mime-Type", "video/mpeg");
        }
        initComponents();
        mediaFileTextField.setText(udInfo.getValueOfAttribute("ELAN-Media-File"));
        mimeTypeComboBox.setSelectedItem(udInfo.getValueOfAttribute("ELAN-Mime-Type"));
        org.exmaralda.common.helpers.Internationalizer.internationalizeDialogToolTips(this);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        mediaFileTextField = new javax.swing.JTextField();
        browseButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        mimeTypeComboBox = new javax.swing.JComboBox(MIME_TYPES);
        buttonPanel = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setTitle("ELAN Media");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jPanel1.setLayout(new java.awt.GridLayout(3, 1));

        jLabel1.setText("Specify media file and MIME type");
        jPanel1.add(jLabel1);

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.X_AXIS));

        jLabel2.setLabelFor(mediaFileTextField);
        jLabel2.setText("Media file: ");
        jLabel2.setMaximumSize(new java.awt.Dimension(54, 15));
        jLabel2.setMinimumSize(new java.awt.Dimension(54, 15));
        jLabel2.setPreferredSize(new java.awt.Dimension(54, 15));
        jPanel2.add(jLabel2);

        mediaFileTextField.setMaximumSize(new java.awt.Dimension(500, 19));
        mediaFileTextField.setMinimumSize(new java.awt.Dimension(25, 19));
        mediaFileTextField.setPreferredSize(new java.awt.Dimension(200, 19));
        jPanel2.add(mediaFileTextField);

        browseButton.setText("Browse...");
        browseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButtonActionPerformed(evt);
            }
        });

        jPanel2.add(browseButton);

        jPanel1.add(jPanel2);

        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.X_AXIS));

        jLabel3.setLabelFor(mimeTypeComboBox);
        jLabel3.setText("MIME type: ");
        jPanel3.add(jLabel3);

        mimeTypeComboBox.setEditable(true);
        mimeTypeComboBox.setMaximumSize(new java.awt.Dimension(500, 24));
        mimeTypeComboBox.setPreferredSize(new java.awt.Dimension(200, 24));
        jPanel3.add(mimeTypeComboBox);

        jPanel1.add(jPanel3);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        buttonPanel.add(okButton);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        buttonPanel.add(cancelButton);

        getContentPane().add(buttonPanel, java.awt.BorderLayout.SOUTH);

        pack();
    }
    // </editor-fold>//GEN-END:initComponents

    private void browseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonActionPerformed
        // Add your handling code here:
        javax.swing.JFileChooser chooser = new javax.swing.JFileChooser();
        chooser.setFileSelectionMode(javax.swing.JFileChooser.FILES_ONLY);
        int returnval = chooser.showDialog(this, "Choose File");
        if(returnval == javax.swing.JFileChooser.APPROVE_OPTION) {
            String filename = chooser.getSelectedFile().getPath();
            mediaFileTextField.setText(filename);
        }        
    }//GEN-LAST:event_browseButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // Add your handling code here:
        userAccepts = false;
        setVisible(false);
        dispose();        
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        // Add your handling code here:
        userAccepts = true;
        setVisible(false);
        dispose();        
    }//GEN-LAST:event_okButtonActionPerformed
    
    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        userAccepts = false;
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseButton;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JTextField mediaFileTextField;
    private javax.swing.JComboBox mimeTypeComboBox;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables
 
    public boolean getMediaInfo(){
        java.awt.Dimension dialogSize = this.getPreferredSize();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(screenSize.width/2 - dialogSize.width/2, screenSize.height/2 - dialogSize.height/2);
        this.show();
        if (userAccepts){
            UDInformationHashtable udInfo = transcription.getHead().getMetaInformation().getUDMetaInformation();
            udInfo.setAttribute("ELAN-Media-File", mediaFileTextField.getText());
            udInfo.setAttribute("ELAN-Mime-Type", (String)(mimeTypeComboBox.getSelectedItem()));
        }
        return userAccepts;
    }
}
