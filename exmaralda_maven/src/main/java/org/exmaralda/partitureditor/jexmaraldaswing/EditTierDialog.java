/*
 * EditTierDialog.java
 *
 * Created on 26. Oktober 2001, 14:56
 */

package org.exmaralda.partitureditor.jexmaraldaswing;

import org.exmaralda.common.helpers.Internationalizer;
import org.exmaralda.partitureditor.jexmaralda.*;

import java.util.*;
/**
 *
 * @author  Thomas
 * @version 
 */
public class EditTierDialog extends JEscapeDialog {

    private static String[] TYPES = {"T(ranscription)", "D(escription)", "A(nnotation)", "L(ink)", "U(ser) D(efined)"};
    private String[] speakers;
    //private BasicTranscription transcription;
    private org.exmaralda.partitureditor.udInformationTable.UDInformationPanel tablePanel;
    private Tier tier;
    private String[] speakerIDs;
    Speakertable speakertable;

    /** Creates new form EditTierDialog */
    public EditTierDialog(java.awt.Frame parent,boolean modal, BasicTranscription t, int tierPos) {
        super (parent, modal);
        tier = t.getBody().getTierAt(tierPos).makeCopy();
        //System.out.println(tier.toXML());
        tablePanel = new org.exmaralda.partitureditor.udInformationTable.UDInformationPanel();
        tablePanel.setUDInformation(tier.getUDTierInformation());        
        speakertable = t.getHead().getSpeakertable();
        speakerIDs = speakertable.getAllSpeakerIDs();
        Vector speakersVector = new Vector();
        int currentSpeakerPos = 0;
        for (int pos=0; pos<speakerIDs.length; pos++){
            try{
                String listEntry = new String(speakerIDs[pos] + " [" + speakertable.getSpeakerWithID(speakerIDs[pos]).getAbbreviation() + "]");
                if (speakerIDs[pos].equals(tier.getSpeaker())){
                    currentSpeakerPos = pos;
                }
                speakersVector.addElement(listEntry);
            } catch (org.exmaralda.partitureditor.jexmaralda.JexmaraldaException je){};
        }
        speakersVector.addElement(new String("[no speaker]"));
        if (tier.getSpeaker()==null){
            currentSpeakerPos=speakersVector.size()-1;
        }
        speakers = StringUtilities.stringVectorToArray(speakersVector);
        initComponents ();
        this.getRootPane().setDefaultButton(okButton);
        propertiesPanel.add(tablePanel);
        displayNameTextField.setText(tier.getDisplayName());
        if (!tier.getDescription(speakertable).equals(tier.getDisplayName())){
            autoCheckBox.setSelected(false);
            displayNameTextField.setEditable(true);
        }
        speakerComboBox.setSelectedIndex(currentSpeakerPos);
        pack ();
        Internationalizer.internationalizeDialogToolTips(this);        
    }

    public Tier getTier(){
        return tier;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonPanel = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        okButton.setMnemonic('O');
        cancelButton = new javax.swing.JButton();
        cancelButton.setMnemonic('C');
        propertiesPanel = new javax.swing.JPanel();
        speakerPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        speakerComboBox = new javax.swing.JComboBox(speakers);
        speakerComboBox.setSelectedIndex(0);
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        typeComboBox = new javax.swing.JComboBox(TYPES);
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        categoryTextField = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        displayNameTextField = new javax.swing.JTextField();
        autoCheckBox = new javax.swing.JCheckBox();

        setTitle("Edit tier properties");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        okButton.setText("OK");
        okButton.setMaximumSize(new java.awt.Dimension(80, 27));
        okButton.setMinimumSize(new java.awt.Dimension(80, 27));
        okButton.setPreferredSize(new java.awt.Dimension(80, 27));
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(okButton);

        cancelButton.setText("Cancel");
        cancelButton.setMaximumSize(new java.awt.Dimension(80, 27));
        cancelButton.setMinimumSize(new java.awt.Dimension(80, 27));
        cancelButton.setPreferredSize(new java.awt.Dimension(80, 27));
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(cancelButton);

        getContentPane().add(buttonPanel, java.awt.BorderLayout.SOUTH);

        propertiesPanel.setLayout(new javax.swing.BoxLayout(propertiesPanel, javax.swing.BoxLayout.Y_AXIS));

        speakerPanel.setAlignmentX(0.0F);
        speakerPanel.setAlignmentY(0.4814815F);
        speakerPanel.setLayout(new javax.swing.BoxLayout(speakerPanel, javax.swing.BoxLayout.LINE_AXIS));

        jLabel1.setText("Speaker: ");
        jLabel1.setMaximumSize(new java.awt.Dimension(60, 16));
        jLabel1.setMinimumSize(new java.awt.Dimension(60, 16));
        jLabel1.setPreferredSize(new java.awt.Dimension(60, 16));
        speakerPanel.add(jLabel1);

        speakerComboBox.setMaximumSize(new java.awt.Dimension(200, 30));
        speakerComboBox.setPreferredSize(new java.awt.Dimension(28, 30));
        speakerComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                speakerComboBoxActionPerformed(evt);
            }
        });
        speakerPanel.add(speakerComboBox);

        propertiesPanel.add(speakerPanel);

        jPanel4.setAlignmentX(0.0F);
        jPanel4.setAlignmentY(0.48F);
        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.LINE_AXIS));

        jLabel2.setText("Type: ");
        jLabel2.setMaximumSize(new java.awt.Dimension(60, 16));
        jLabel2.setMinimumSize(new java.awt.Dimension(60, 16));
        jLabel2.setPreferredSize(new java.awt.Dimension(60, 16));
        jPanel4.add(jLabel2);

        typeComboBox.setMaximumSize(new java.awt.Dimension(130, 30));
        typeComboBox.setPreferredSize(new java.awt.Dimension(28, 30));
        if (tier.getType().equals("t")){
            typeComboBox.setSelectedIndex(0);
        } else if (tier.getType().equals("d")){
            typeComboBox.setSelectedIndex(1);
        } else if (tier.getType().equals("a")){
            typeComboBox.setSelectedIndex(2);
        } else if (tier.getType().equals("l")){
            typeComboBox.setSelectedIndex(3);
        } if (tier.getType().equals("ud")){
            typeComboBox.setSelectedIndex(4);
        }
        jPanel4.add(typeComboBox);

        propertiesPanel.add(jPanel4);

        jPanel5.setAlignmentX(0.0F);
        jPanel5.setLayout(new javax.swing.BoxLayout(jPanel5, javax.swing.BoxLayout.LINE_AXIS));

        jLabel3.setText("Category: ");
        jLabel3.setMaximumSize(new java.awt.Dimension(60, 16));
        jLabel3.setMinimumSize(new java.awt.Dimension(60, 16));
        jLabel3.setPreferredSize(new java.awt.Dimension(60, 16));
        jPanel5.add(jLabel3);

        categoryTextField.setMaximumSize(new java.awt.Dimension(200, 30));
        categoryTextField.setMinimumSize(new java.awt.Dimension(50, 20));
        categoryTextField.setPreferredSize(new java.awt.Dimension(120, 30));
        categoryTextField.setText(tier.getCategory());
        categoryTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                categoryTextFieldActionPerformed(evt);
            }
        });
        jPanel5.add(categoryTextField);

        propertiesPanel.add(jPanel5);

        jPanel1.setAlignmentX(0.0F);
        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        jLabel4.setText("Display: ");
        jLabel4.setMaximumSize(new java.awt.Dimension(60, 16));
        jLabel4.setMinimumSize(new java.awt.Dimension(60, 16));
        jLabel4.setPreferredSize(new java.awt.Dimension(60, 16));
        jPanel1.add(jLabel4);

        displayNameTextField.setEditable(false);
        displayNameTextField.setMaximumSize(new java.awt.Dimension(150, 30));
        displayNameTextField.setMinimumSize(new java.awt.Dimension(40, 20));
        displayNameTextField.setPreferredSize(new java.awt.Dimension(100, 30));
        jPanel1.add(displayNameTextField);

        autoCheckBox.setSelected(true);
        autoCheckBox.setText("Auto");
        autoCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoCheckBoxActionPerformed(evt);
            }
        });
        jPanel1.add(autoCheckBox);

        propertiesPanel.add(jPanel1);

        getContentPane().add(propertiesPanel, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void autoCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoCheckBoxActionPerformed
        // Add your handling code here:
        if (autoCheckBox.isSelected()){
            checkAuto();
            displayNameTextField.setEditable(false);
        } else {
            displayNameTextField.setEditable(true);
        }
    }//GEN-LAST:event_autoCheckBoxActionPerformed

    private void categoryTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_categoryTextFieldActionPerformed
        // Add your handling code here:
        checkAuto();
    }//GEN-LAST:event_categoryTextFieldActionPerformed

    private void speakerComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_speakerComboBoxActionPerformed
        // Add your handling code here:
        checkAuto();
    }//GEN-LAST:event_speakerComboBoxActionPerformed

  private void cancelButtonActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
// Add your handling code here:
    change = false;
    setVisible (false);
    dispose ();        
  }//GEN-LAST:event_cancelButtonActionPerformed

  private void addButtonActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
// Add your handling code here:
  }//GEN-LAST:event_addButtonActionPerformed

  private void removeButtonActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
// Add your handling code here:
  }//GEN-LAST:event_removeButtonActionPerformed

  private void okButtonActionPerformed (java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
// Add your handling code here:
    change = true;
    checkAuto();
    updateTier();
    setVisible (false);
    dispose ();               
    
  }//GEN-LAST:event_okButtonActionPerformed

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        change = false;
        setVisible (false);
        dispose ();
    }//GEN-LAST:event_closeDialog

    /**
    * @param args the command line arguments
    */
    public static void main (String args[]) {
//        new EditTierDialog (new javax.swing.JFrame (), true).show ();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox autoCheckBox;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField categoryTextField;
    private javax.swing.JTextField displayNameTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JButton okButton;
    private javax.swing.JPanel propertiesPanel;
    private javax.swing.JComboBox speakerComboBox;
    private javax.swing.JPanel speakerPanel;
    private javax.swing.JComboBox typeComboBox;
    // End of variables declaration//GEN-END:variables

    public boolean editTier(){
        java.awt.Dimension dialogSize = this.getPreferredSize();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(screenSize.width/2 - dialogSize.width/2, screenSize.height/2 - dialogSize.height/2);        
        show();
        return change;
    }
    
    private void checkAuto(){
        if (autoCheckBox.isSelected()){
            updateTier();
            displayNameTextField.setText(tier.getDescription(speakertable));
        }
    }
    
    private void updateTier(){
        int typeIndex = typeComboBox.getSelectedIndex();
        String type = new String();
        switch (typeIndex){
            case 0 : type = "t"; break;
            case 1 : type = "d"; break;
            case 2 : type = "a"; break;
            case 3 : type = "l"; break;
            case 4 : type = "ud"; break;
        }
        String category = categoryTextField.getText();
        String selectedSpeaker = (String)speakerComboBox.getSelectedItem();
        if (!selectedSpeaker.equals("[no speaker]")){
            String speakerID = speakerIDs[speakerComboBox.getSelectedIndex()];
            tier.setSpeaker(speakerID);
        } else {
            tier.setSpeaker(null);
        }    
        String displayName = displayNameTextField.getText();
        tier.setType(type);
        tier.setCategory(category);
        tier.setDisplayName(displayName);
        tier.setUDTierInformation(tablePanel.getUDInformation());    
    }

}