/*
 * JDialog.java
 *
 * Created on 13. Juni 2002, 11:37
 */

package org.exmaralda.partitureditor.jexmaraldaswing;

import org.exmaralda.common.helpers.Internationalizer;
import org.exmaralda.partitureditor.unicodeKeyboard.UnicodeKeyboardPanel;
import org.exmaralda.partitureditor.jexmaralda.Event;

/**
 *
 * @author  Thomas
 */
public class EditEventDialog extends JEscapeDialog implements org.exmaralda.partitureditor.unicodeKeyboard.UnicodeKeyboardListener {

    private org.exmaralda.partitureditor.udInformationTable.UDInformationPanel tablePanel;
    public boolean change;
    private Event event;
    private UnicodeKeyboardPanel keyboardPanel;
    
    /** Creates new form JDialog
     * @param parent
     * @param modal
     * @param e
     * @param generalPurposeFont */
    public EditEventDialog(java.awt.Frame parent, boolean modal, Event e, String generalPurposeFont) {        
        super(parent, modal);
        event = e.makeCopy();
        tablePanel = new org.exmaralda.partitureditor.udInformationTable.UDInformationPanel();
        tablePanel.setUDInformation(event.getUDEventInformation());        
        initComponents();
        this.getRootPane().setDefaultButton(okButton);
        descriptionPanel.add(tablePanel);
        startLabel.setText("Start : " + event.getStart());
        endLabel.setText("End : " + event.getEnd());
        descriptionTextArea.setText(event.getDescription());        
        keyboardPanel = new UnicodeKeyboardPanel(new String[0], generalPurposeFont);
        keyboardPanel.addListener(this);
        //keyboardHolderPanel.setPreferredSize(new java.awt.Dimension(200, 300));
        keyboardHolderPanel.add(keyboardPanel);
        descriptionTextArea.setFont(new java.awt.Font(generalPurposeFont, java.awt.Font.PLAIN, 12));
        Internationalizer.internationalizeDialogToolTips(this);        
    }

    public EditEventDialog(java.awt.Frame parent, boolean modal, Event e) {        
        this (parent, modal, e, "Arial Unicode MS");
    }
 
    
    public void setFont(java.awt.Font font){
        descriptionTextArea.setFont(font);
    }
    
    public Event getEvent(){
        return event;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        tliPanel = new javax.swing.JPanel();
        startLabel = new javax.swing.JLabel();
        endLabel = new javax.swing.JLabel();
        buttonPanel = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        mainPanel = new javax.swing.JPanel();
        descriptionPanel = new javax.swing.JPanel();
        descriptionScrollPane = new javax.swing.JScrollPane();
        descriptionTextArea = new javax.swing.JTextArea();
        keyboardHolderPanel = new javax.swing.JPanel();

        setTitle("Edit event properties");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        tliPanel.setLayout(new java.awt.GridLayout(2, 1));

        startLabel.setText("jLabel1");
        tliPanel.add(startLabel);

        endLabel.setText("jLabel2");
        tliPanel.add(endLabel);

        getContentPane().add(tliPanel, java.awt.BorderLayout.NORTH);

        okButton.setText("OK");
        okButton.setMaximumSize(new java.awt.Dimension(73, 26));
        okButton.setMinimumSize(new java.awt.Dimension(73, 26));
        okButton.setPreferredSize(new java.awt.Dimension(73, 26));
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        buttonPanel.add(okButton);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        buttonPanel.add(cancelButton);

        getContentPane().add(buttonPanel, java.awt.BorderLayout.SOUTH);

        mainPanel.setLayout(new javax.swing.BoxLayout(mainPanel, javax.swing.BoxLayout.X_AXIS));

        descriptionPanel.setLayout(new javax.swing.BoxLayout(descriptionPanel, javax.swing.BoxLayout.Y_AXIS));

        descriptionPanel.setPreferredSize(new java.awt.Dimension(400, 300));
        descriptionTextArea.setLineWrap(true);
        descriptionTextArea.setWrapStyleWord(true);
        descriptionTextArea.setBorder(new javax.swing.border.TitledBorder("Event description"));
        descriptionTextArea.setMinimumSize(new java.awt.Dimension(300, 150));
        descriptionTextArea.setPreferredSize(new java.awt.Dimension(400, 300));
        descriptionScrollPane.setViewportView(descriptionTextArea);

        descriptionPanel.add(descriptionScrollPane);

        mainPanel.add(descriptionPanel);

        keyboardHolderPanel.setLayout(new javax.swing.BoxLayout(keyboardHolderPanel, javax.swing.BoxLayout.X_AXIS));

        mainPanel.add(keyboardHolderPanel);

        getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);

        pack();
    }
    // </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // Add your handling code here:
        change = false;
        setVisible(false);
        dispose();        
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        // Add your handling code here:
        change = true;
        event.setDescription(descriptionTextArea.getText());
        event.setUDEventInformation(tablePanel.getUDInformation());
        setVisible (false);
        dispose ();                       
    }//GEN-LAST:event_okButtonActionPerformed

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        change = false;
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
//        new EditEventDialog(new javax.swing.JFrame(), true, new Event()).show();
    }

    @Override
    public void performUnicodeKeyboardAction(org.exmaralda.partitureditor.unicodeKeyboard.UnicodeKeyboardEvent event) {
        if (descriptionTextArea.getSelectionStart()>=0){
            descriptionTextArea.replaceSelection(event.getText());
            descriptionTextArea.requestFocus();
        }
    }    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel descriptionPanel;
    private javax.swing.JScrollPane descriptionScrollPane;
    private javax.swing.JTextArea descriptionTextArea;
    private javax.swing.JLabel endLabel;
    private javax.swing.JPanel keyboardHolderPanel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton okButton;
    private javax.swing.JLabel startLabel;
    private javax.swing.JPanel tliPanel;
    // End of variables declaration//GEN-END:variables

    public java.awt.Dimension getPreferredSize(){
        return new java.awt.Dimension(680,450);
    }
    
    public boolean editEvent(){
        java.awt.Dimension dialogSize = this.getPreferredSize();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(screenSize.width/2 - dialogSize.width/2, screenSize.height/2 - dialogSize.height/2);        
        show();
        return change;
    }
    
}
