/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.exmaralda.partitureditor.svgPanel;

import java.io.File;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import org.exmaralda.partitureditor.linkPanel.ScrollablePicture;

/**
 *
 * @author Schmidt
 */
public class PrototypeSVGPanel extends javax.swing.JPanel implements XPointerListener {

    /**
     * Creates new form PrototypeSVGPanel
     */
    public PrototypeSVGPanel() {
        initComponents();
        loadImage();
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        graphicsPanel = new javax.swing.JPanel();
        fileSelectionPanel = new javax.swing.JPanel();
        fileSelectionComboBox = new javax.swing.JComboBox();
        controlsPanel = new javax.swing.JPanel();
        showPanel = new javax.swing.JPanel();
        showXPointerLabel = new javax.swing.JLabel();
        getButton = new javax.swing.JButton();
        sendPanel = new javax.swing.JPanel();
        sendXPointerTextField = new javax.swing.JTextField();
        sendButton = new javax.swing.JButton();

        setLayout(new java.awt.BorderLayout());

        graphicsPanel.setLayout(new javax.swing.BoxLayout(graphicsPanel, javax.swing.BoxLayout.LINE_AXIS));
        add(graphicsPanel, java.awt.BorderLayout.CENTER);

        fileSelectionPanel.setLayout(new javax.swing.BoxLayout(fileSelectionPanel, javax.swing.BoxLayout.LINE_AXIS));

        fileSelectionComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "diagram1.svg", "diagram2.svg", "diagram3.svg" }));
        fileSelectionPanel.add(fileSelectionComboBox);

        add(fileSelectionPanel, java.awt.BorderLayout.PAGE_START);

        controlsPanel.setLayout(new javax.swing.BoxLayout(controlsPanel, javax.swing.BoxLayout.Y_AXIS));

        showPanel.setLayout(new javax.swing.BoxLayout(showPanel, javax.swing.BoxLayout.LINE_AXIS));

        showXPointerLabel.setText("diagramme/ExampleDiagram2.svg#xpointer(id('rect1234'))");
        showXPointerLabel.setMaximumSize(new java.awt.Dimension(2147483647, 2147483647));
        showXPointerLabel.setMinimumSize(new java.awt.Dimension(287, 20));
        showXPointerLabel.setPreferredSize(new java.awt.Dimension(287, 20));
        showPanel.add(showXPointerLabel);

        getButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/exmaralda/partitureditor/partiture/Icons/Import.gif"))); // NOI18N
        getButton.setText("Show");
        getButton.setPreferredSize(new java.awt.Dimension(100, 33));
        showPanel.add(getButton);

        controlsPanel.add(showPanel);

        sendPanel.setLayout(new javax.swing.BoxLayout(sendPanel, javax.swing.BoxLayout.LINE_AXIS));

        sendXPointerTextField.setText("diagramme/ExampleDiagram1.svg#xpointer(id('rect3144'))");
        sendXPointerTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendXPointerTextFieldActionPerformed(evt);
            }
        });
        sendPanel.add(sendXPointerTextField);

        sendButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/exmaralda/partitureditor/partiture/Icons/Export.gif"))); // NOI18N
        sendButton.setText("Send");
        sendButton.setPreferredSize(new java.awt.Dimension(100, 33));
        sendPanel.add(sendButton);

        controlsPanel.add(sendPanel);

        add(controlsPanel, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents

    private void sendXPointerTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendXPointerTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sendXPointerTextFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel controlsPanel;
    private javax.swing.JComboBox fileSelectionComboBox;
    private javax.swing.JPanel fileSelectionPanel;
    private javax.swing.JButton getButton;
    private javax.swing.JPanel graphicsPanel;
    private javax.swing.JButton sendButton;
    private javax.swing.JPanel sendPanel;
    private javax.swing.JTextField sendXPointerTextField;
    private javax.swing.JPanel showPanel;
    private javax.swing.JLabel showXPointerLabel;
    // End of variables declaration//GEN-END:variables

    ArrayList<XPointerListener> xPointerListenerList = new ArrayList<XPointerListener>();
    
    public void addXPointerListener(XPointerListener listener){
        if (!xPointerListenerList.contains(listener)){
            xPointerListenerList.add(listener);
        }
    }
    
    public void removeXPointerListener(XPointerListener listener){
        xPointerListenerList.remove(listener);
    }
    
    private void loadImage() {
        java.net.URL imgURL = getClass().getResource("/org/exmaralda/partitureditor/svgPanel/ExampleDiagram.png");
        ImageIcon image = new ImageIcon(imgURL);
        ScrollablePicture scrollablePicture = new ScrollablePicture(image, 20);            
        graphicsPanel.add(scrollablePicture);
        java.awt.Dimension size = new java.awt.Dimension(image.getIconWidth(), image.getIconHeight());
        System.out.println(image.getIconWidth() + " / " + image.getIconHeight());
        graphicsPanel.setPreferredSize(size);
        graphicsPanel.setMaximumSize(size);
    }

    @Override
    public void processXPointer(String xPointer) {
        showXPointerLabel.setText(xPointer);
    }
    
    /* set the list of SVG files available 
     in the fileSelectionComboBox 
    */
    public void setFileList(File[] files){
        
    }
    
    /* send the current XPointer to whoever 
       is listening
    */
    public void sendXPointer(){
        String xPointer = sendXPointerTextField.getText();
        for (XPointerListener listener : xPointerListenerList){
            listener.processXPointer(xPointer);
        }
    }
    
}
