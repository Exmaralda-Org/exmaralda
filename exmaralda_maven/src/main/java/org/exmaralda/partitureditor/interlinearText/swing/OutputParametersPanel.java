/*
 * OutputParametersPanel.java
 *
 * Created on 25. Maerz 2002, 14:16
 */

package org.exmaralda.partitureditor.interlinearText.swing;

import org.exmaralda.partitureditor.interlinearText.*;
/**
 *
 * @author  Thomas
 */
public class OutputParametersPanel extends javax.swing.JPanel {

    static String[] STYLES = {"Solid", "Dashed", "Dotted"};
    java.awt.Color frameColor = java.awt.Color.black;

    /** Creates new form OutputParametersPanel */
    public OutputParametersPanel() {
        initComponents();
    }

    /** Creates new form OutputParametersPanel */
    public OutputParametersPanel(OutputParameters param) {
        initComponents();
        putSyncPointsOutsideCheckBox.setSelected(param.putSyncPointsOutside);
        putSyncPointsOutsideCheckBox.setEnabled(param.includeSyncPoints);
        includeSyncPointsCheckBox.setSelected(param.includeSyncPoints);
        prependCheckBox.setSelected(param.prependAdditionalInformation);
        leftCheckBox.setSelected(param.frame.indexOf('l')>=0);
        rightCheckBox.setSelected(param.frame.indexOf('r')>=0);
        topCheckBox.setSelected(param.frame.indexOf('t')>=0);
        bottomCheckBox.setSelected(param.frame.indexOf('b')>=0);
        if (param.frameStyle.equalsIgnoreCase("Solid")) frameStyleComboBox.setSelectedIndex(0);        
        else if (param.frameStyle.equalsIgnoreCase("Dashed")) frameStyleComboBox.setSelectedIndex(1);        
        else if (param.frameStyle.equalsIgnoreCase("Dotted")) frameStyleComboBox.setSelectedIndex(2);        
        frameColorButton.setBackground(param.makeFrameColor());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        syncPointsPanel = new javax.swing.JPanel();
        includeSyncPointsCheckBox = new javax.swing.JCheckBox();
        putSyncPointsOutsideCheckBox = new javax.swing.JCheckBox();
        framePanel = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        leftCheckBox = new javax.swing.JCheckBox();
        rightCheckBox = new javax.swing.JCheckBox();
        topCheckBox = new javax.swing.JCheckBox();
        bottomCheckBox = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        frameColorButton = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        frameStyleComboBox = new javax.swing.JComboBox(STYLES);
        jPanel1 = new javax.swing.JPanel();
        prependCheckBox = new javax.swing.JCheckBox();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        syncPointsPanel.setLayout(new java.awt.GridLayout(2, 1));

        syncPointsPanel.setBorder(new javax.swing.border.TitledBorder("Timeline"));
        includeSyncPointsCheckBox.setSelected(true);
        includeSyncPointsCheckBox.setText("Include timeline");
        includeSyncPointsCheckBox.setToolTipText("Zeitachse mit ausgeben");
        includeSyncPointsCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                includeSyncPointsCheckBoxActionPerformed(evt);
            }
        });

        syncPointsPanel.add(includeSyncPointsCheckBox);

        putSyncPointsOutsideCheckBox.setSelected(true);
        putSyncPointsOutsideCheckBox.setText("Put timeline outside frame");
        putSyncPointsOutsideCheckBox.setToolTipText("Zeitachse au\u00dferhalb der Partiturfl\u00e4chen");
        syncPointsPanel.add(putSyncPointsOutsideCheckBox);

        add(syncPointsPanel);

        framePanel.setLayout(new java.awt.GridLayout(3, 1));

        framePanel.setBorder(new javax.swing.border.TitledBorder("Frame"));
        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.X_AXIS));

        jLabel1.setText("Sides: ");
        jLabel1.setMaximumSize(new java.awt.Dimension(70, 16));
        jLabel1.setMinimumSize(new java.awt.Dimension(50, 16));
        jLabel1.setPreferredSize(new java.awt.Dimension(70, 16));
        jPanel3.add(jLabel1);

        leftCheckBox.setSelected(true);
        leftCheckBox.setText("Left");
        jPanel3.add(leftCheckBox);

        rightCheckBox.setSelected(true);
        rightCheckBox.setText("Right");
        jPanel3.add(rightCheckBox);

        topCheckBox.setSelected(true);
        topCheckBox.setText("Top");
        jPanel3.add(topCheckBox);

        bottomCheckBox.setSelected(true);
        bottomCheckBox.setText("Bottom");
        jPanel3.add(bottomCheckBox);

        framePanel.add(jPanel3);

        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.X_AXIS));

        jLabel2.setText("Color: ");
        jLabel2.setMaximumSize(new java.awt.Dimension(70, 16));
        jLabel2.setMinimumSize(new java.awt.Dimension(50, 16));
        jLabel2.setPreferredSize(new java.awt.Dimension(70, 16));
        jPanel4.add(jLabel2);

        frameColorButton.setBackground(java.awt.Color.black);
        frameColorButton.setFont(new java.awt.Font("Dialog", 0, 10));
        frameColorButton.setText("Edit...");
        frameColorButton.setMaximumSize(new java.awt.Dimension(100, 16));
        frameColorButton.setMinimumSize(new java.awt.Dimension(64, 16));
        frameColorButton.setPreferredSize(new java.awt.Dimension(100, 16));
        frameColorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                frameColorButtonActionPerformed(evt);
            }
        });

        jPanel4.add(frameColorButton);

        framePanel.add(jPanel4);

        jPanel5.setLayout(new javax.swing.BoxLayout(jPanel5, javax.swing.BoxLayout.X_AXIS));

        jLabel3.setText("Frame style: ");
        jLabel3.setMaximumSize(new java.awt.Dimension(70, 16));
        jLabel3.setMinimumSize(new java.awt.Dimension(50, 16));
        jLabel3.setPreferredSize(new java.awt.Dimension(70, 16));
        jPanel5.add(jLabel3);

        frameStyleComboBox.setFont(new java.awt.Font("Dialog", 0, 10));
        frameStyleComboBox.setMaximumSize(new java.awt.Dimension(32767, 16));
        frameStyleComboBox.setMinimumSize(new java.awt.Dimension(31, 16));
        frameStyleComboBox.setPreferredSize(new java.awt.Dimension(31, 16));
        jPanel5.add(frameStyleComboBox);

        framePanel.add(jPanel5);

        add(framePanel);

        jPanel1.setLayout(new java.awt.GridLayout(1, 1));

        jPanel1.setBorder(new javax.swing.border.TitledBorder("Miscellaneous"));
        prependCheckBox.setSelected(true);
        prependCheckBox.setText("Prepend meta information and speakertable");
        prependCheckBox.setToolTipText("Meta-Info und Sprechertabelle ausgeben");
        jPanel1.add(prependCheckBox);

        add(jPanel1);

    }
    // </editor-fold>//GEN-END:initComponents

    private void frameColorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_frameColorButtonActionPerformed
        // Add your handling code here:
        java.awt.Color color = javax.swing.JColorChooser.showDialog(this, "Choose a color", frameColor);
        frameColor=color;
        frameColorButton.setBackground(color);
    }//GEN-LAST:event_frameColorButtonActionPerformed

    private void includeSyncPointsCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_includeSyncPointsCheckBoxActionPerformed
        // Add your handling code here:
        putSyncPointsOutsideCheckBox.setEnabled(includeSyncPointsCheckBox.isSelected());
    }//GEN-LAST:event_includeSyncPointsCheckBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox bottomCheckBox;
    private javax.swing.JButton frameColorButton;
    private javax.swing.JPanel framePanel;
    private javax.swing.JComboBox frameStyleComboBox;
    private javax.swing.JCheckBox includeSyncPointsCheckBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JCheckBox leftCheckBox;
    private javax.swing.JCheckBox prependCheckBox;
    private javax.swing.JCheckBox putSyncPointsOutsideCheckBox;
    private javax.swing.JCheckBox rightCheckBox;
    private javax.swing.JPanel syncPointsPanel;
    private javax.swing.JCheckBox topCheckBox;
    // End of variables declaration//GEN-END:variables

    public void modifyParameters(org.exmaralda.partitureditor.interlinearText.OutputParameters param){
        param.putSyncPointsOutside = putSyncPointsOutsideCheckBox.isSelected();
        param.includeSyncPoints = includeSyncPointsCheckBox.isSelected();
        param.prependAdditionalInformation = prependCheckBox.isSelected();
        param.frame = "";
        if (leftCheckBox.isSelected()) param.frame+='l';
        if (rightCheckBox.isSelected()) param.frame+='r';
        if (topCheckBox.isSelected()) param.frame+='t';
        if (bottomCheckBox.isSelected()) param.frame+='b';        
        param.frameStyle=(String)frameStyleComboBox.getSelectedItem();
        param.setFrameColor(frameColorButton.getBackground());
    }
}
