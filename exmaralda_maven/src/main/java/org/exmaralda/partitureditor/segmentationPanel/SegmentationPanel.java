/*
 * SegmentationPanel.java
 *
 * Created on 15. Januar 2003, 10:14
 */

package org.exmaralda.partitureditor.segmentationPanel;

import org.exmaralda.partitureditor.jexmaralda.TimedSegment;
import org.exmaralda.partitureditor.jexmaralda.TimedSegmentSaxReader;
import org.exmaralda.partitureditor.fsm.FSMSaxReader;
import org.exmaralda.partitureditor.fsm.FiniteStateMachine;
import org.exmaralda.partitureditor.fsm.FSMException;
import javax.swing.*;
import org.xml.sax.*;
import org.exmaralda.partitureditor.jexmaralda.*;
import org.exmaralda.partitureditor.fsm.*;
import java.util.*;
import org.exmaralda.partitureditor.jexmaralda.*;
/**
 *
 * @author  Thomas
 */
public class SegmentationPanel extends javax.swing.JDialog {

    javax.swing.event.EventListenerList listenerList = new javax.swing.event.EventListenerList();
    
    static String[] FSM_Names = {       "HIAT: Utterances and words", 
                                        "DIDA: Words", 
                                        "GAT: Intonation Units", 
                                        "CHAT: Utterances",
                                        "IPA: Words and syllables"
                                };
    static String[] FSM_Files =     {   
                                        "/org/exmaralda/partitureditor/fsm/xml/HIAT_UtteranceWord.xml", 
                                        "/org/exmaralda/partitureditor/fsm/xml/DIDA_Word.xml", 
                                        "/org/exmaralda/partitureditor/fsm/xml/GAT_Phrasierungseinheit.xml",
                                        "/org/exmaralda/partitureditor/fsm/xml/CHAT_Utterance.xml",
                                        "/org/exmaralda/partitureditor/fsm/xml/IPA_WordSyllable.xml"
                                    };
    FiniteStateMachine fsm;
    private TimedSegmentSaxReader tsr = new TimedSegmentSaxReader();
    
    /** Creates new form SegmentationPanel */
    public SegmentationPanel(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        try{
            loadFSM("/org/exmaralda/partitureditor/fsm/xml/HIAT_UtteranceWord.xml");
        } catch (SAXException se){}
        TimedSegment emptyTurn = new TimedSegment();
        emptyTurn.setName("t");
        emptyTurn.setDescription("Empty segment chain.");
        javax.swing.tree.DefaultTreeModel model = new javax.swing.tree.DefaultTreeModel(emptyTurn);
        parseTree.setModel(model);      
        org.exmaralda.common.helpers.Internationalizer.internationalizeDialogToolTips(this);
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        jPanel5 = new javax.swing.JPanel();
        getTurnButton = new javax.swing.JButton();
        parseTurnButton = new javax.swing.JButton();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel6 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        turnTextArea = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        fsmComboBox = new JComboBox(FSM_Names);
        jButton3 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        messageLabel = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        messageTextArea = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        parseTree = new javax.swing.JTree();

        setTitle("Segmentation panel");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        jPanel5.setMaximumSize(new java.awt.Dimension(1200, 36));
        jPanel5.setPreferredSize(new java.awt.Dimension(300, 36));
        getTurnButton.setText("Get segment chain");
        getTurnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                getTurnButtonActionPerformed(evt);
            }
        });

        jPanel5.add(getTurnButton);

        parseTurnButton.setText("Parse segment chain");
        parseTurnButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                parseTurnButtonActionPerformed(evt);
            }
        });

        jPanel5.add(parseTurnButton);

        getContentPane().add(jPanel5, java.awt.BorderLayout.NORTH);

        jPanel6.setLayout(new javax.swing.BoxLayout(jPanel6, javax.swing.BoxLayout.Y_AXIS));

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.X_AXIS));

        jPanel1.setBorder(new javax.swing.border.TitledBorder("Segment chain text"));
        jPanel1.setPreferredSize(new java.awt.Dimension(300, 76));
        jScrollPane2.setMaximumSize(new java.awt.Dimension(1200, 120));
        turnTextArea.setBackground(new java.awt.Color(204, 204, 204));
        turnTextArea.setEditable(false);
        turnTextArea.setFont(new java.awt.Font("Arial Unicode MS", 0, 10));
        turnTextArea.setLineWrap(true);
        turnTextArea.setRows(3);
        turnTextArea.setWrapStyleWord(true);
        jScrollPane2.setViewportView(turnTextArea);

        jPanel1.add(jScrollPane2);

        jPanel6.add(jPanel1);

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.X_AXIS));

        jPanel2.setBorder(new javax.swing.border.TitledBorder("Finite State Machine"));
        jPanel2.setMaximumSize(new java.awt.Dimension(1200, 51));
        jPanel2.setPreferredSize(new java.awt.Dimension(300, 51));
        fsmComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fsmComboBoxActionPerformed(evt);
            }
        });

        jPanel2.add(fsmComboBox);

        jButton3.setText("Open...");
        jButton3.setEnabled(false);
        jPanel2.add(jButton3);

        jPanel6.add(jPanel2);

        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.X_AXIS));

        jPanel3.setBorder(new javax.swing.border.TitledBorder("Messages"));
        jPanel3.setMaximumSize(new java.awt.Dimension(1200, 120));
        jPanel3.setPreferredSize(new java.awt.Dimension(300, 76));
        messageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/exmaralda/partitureditor/segmentationPanel/StopSign.gif")));
        jPanel3.add(messageLabel);

        messageTextArea.setBackground(java.awt.Color.black);
        messageTextArea.setEditable(false);
        messageTextArea.setFont(new java.awt.Font("Arial Unicode MS", 0, 10));
        messageTextArea.setForeground(java.awt.Color.green);
        messageTextArea.setLineWrap(true);
        messageTextArea.setRows(3);
        jScrollPane4.setViewportView(messageTextArea);

        jPanel3.add(jScrollPane4);

        jPanel6.add(jPanel3);

        jSplitPane1.setLeftComponent(jPanel6);

        jPanel7.setLayout(new javax.swing.BoxLayout(jPanel7, javax.swing.BoxLayout.X_AXIS));

        jPanel4.setLayout(new javax.swing.BoxLayout(jPanel4, javax.swing.BoxLayout.X_AXIS));

        jPanel4.setBorder(new javax.swing.border.TitledBorder("Parsed result"));
        jPanel4.setMaximumSize(new java.awt.Dimension(1200, 500));
        jPanel4.setPreferredSize(new java.awt.Dimension(300, 150));
        parseTree.setFont(new java.awt.Font("Arial Unicode MS", 0, 10));
        jScrollPane3.setViewportView(parseTree);

        jPanel4.add(jScrollPane3);

        jPanel7.add(jPanel4);

        jSplitPane1.setRightComponent(jPanel7);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.CENTER);

        pack();
    }
    // </editor-fold>//GEN-END:initComponents

    private void parseTurnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_parseTurnButtonActionPerformed
        // Add your handling code here:
        try {
            String input = turnTextArea.getText();
            String output = fsm.process(input);            
            TimedSegment ts = tsr.readFromString(output);            
            javax.swing.tree.DefaultTreeModel model = new javax.swing.tree.DefaultTreeModel(ts);
            parseTree.setModel(model);
            messageTextArea.setForeground(java.awt.Color.green);
            messageTextArea.setText("Segment chain parsed successfully!");
        } catch (SAXException sae){
            String text = "SAX Error: " + System.getProperty("line.separator") + sae.getMessage();
            messageTextArea.setForeground(java.awt.Color.red);
            messageTextArea.setText(text);
        } catch (FSMException fsme){
            String text = "FSM Error: " + System.getProperty("line.separator") + fsme.getMessage();
            text+=System.getProperty("line.separator") + "Processed output: ";
            text+=System.getProperty("line.separator") + stripXMLElements(fsme.getProcessedOutput());
            messageTextArea.setForeground(java.awt.Color.red);
            messageTextArea.setText(text);            
        }
    }//GEN-LAST:event_parseTurnButtonActionPerformed

    private void getTurnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_getTurnButtonActionPerformed
        // Add your handling code here:
        fireGetTurnButtonPressed();
    }//GEN-LAST:event_getTurnButtonActionPerformed

    private void fsmComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fsmComboBoxActionPerformed
        // Add your handling code here:
        int index = fsmComboBox.getSelectedIndex();
        try{
            loadFSM(FSM_Files[index]);
            messageTextArea.setForeground(java.awt.Color.green);
            messageTextArea.setText("FSM " + FSM_Names[index] + " read successfully.");
            messageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/exmaralda/partitureditor/segmentationPanel/GoSign.gif")));
            parseTurnButton.setEnabled(true);
        } catch (SAXException sae){
            messageTextArea.setForeground(java.awt.Color.red);
            messageTextArea.setText("FSM " + FSM_Names[index] + " could not be read: " + sae.getMessage());
            messageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/exmaralda/partitureditor/segmentationPanel/StopSign.gif")));
            parseTurnButton.setEnabled(false);
        } 

    }//GEN-LAST:event_fsmComboBoxActionPerformed

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        setVisible(false);
        dispose();
    }//GEN-LAST:event_closeDialog

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        new SegmentationPanel(new javax.swing.JFrame(), true).show();
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox fsmComboBox;
    private javax.swing.JButton getTurnButton;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JLabel messageLabel;
    private javax.swing.JTextArea messageTextArea;
    private javax.swing.JTree parseTree;
    private javax.swing.JButton parseTurnButton;
    private javax.swing.JTextArea turnTextArea;
    // End of variables declaration//GEN-END:variables

    private void loadFSM (String name) throws SAXException {
        FSMSaxReader fsmsr = new FSMSaxReader();
        java.io.InputStream is2 = getClass().getResourceAsStream(name);
        fsm = fsmsr.readFromStream(is2);
    }
    
    
    public void addSegmentationPanelListener(SegmentationPanelListener l) {
         listenerList.add(SegmentationPanelListener.class, l);
    }
    
    public void removeUnicodeListener(SegmentationPanelListener l) {
         listenerList.remove(SegmentationPanelListener.class, l);
    }
    
    public void removeAllListeners(){
        listenerList = new javax.swing.event.EventListenerList();
    }
    
    
    protected void fireGetTurnButtonPressed() {
         // Guaranteed to return a non-null array
        Object[] listeners = listenerList.getListenerList();
        // Process the listeners last to first, notifying
        // those that are interested in this event
        for (int i = listeners.length-2; i>=0; i-=2) {
             if (listeners[i]==SegmentationPanelListener.class) {
                SegmentationPanelEvent event = new SegmentationPanelEvent();
                ((SegmentationPanelListener)listeners[i+1]).getTurnRequested(event);             
            }
         }
    }
    
    public void setTurn(boolean isTurn, String text){
        if (isTurn){
            turnTextArea.setText(text);
            parseTurnButton.setEnabled(true);
            messageTextArea.setForeground(java.awt.Color.green);
            messageTextArea.setText("Got segment chain.");
            messageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/exmaralda/partitureditor/segmentationPanel/GoSign.gif")));
        } else {
            turnTextArea.setText("");
            parseTurnButton.setEnabled(false);            
            messageTextArea.setForeground(java.awt.Color.red);
            messageTextArea.setText(text);
            messageLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/exmaralda/partitureditor/segmentationPanel/StopSign.gif")));
        }
    }
    
    public void show(){
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        java.awt.Dimension dialogSize = this.getPreferredSize();
        this.setLocation(screenSize.width/2 - dialogSize.width/2, screenSize.height - dialogSize.height - 20);
        super.show();
    }
    
    static String stripXMLElements (String text){
        StringBuffer sb = new StringBuffer();
        boolean on = true;
        for (int pos=0; pos<text.length(); pos++){
            char c = text.charAt(pos);
            if (c=='<') on=false;
            if (c=='>') {on=true;}
            else if (on) {sb.append(c);}
        }
        return sb.toString();
    }
    
    
}
