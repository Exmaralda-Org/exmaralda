/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * WordNormalizationDialog.java
 *
 * Created on 04.03.2010, 16:20:32
 */

package org.exmaralda.orthonormal.gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseMotionListener;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JComponent;
import javax.swing.KeyStroke;
import org.exmaralda.orthonormal.application.ApplicationFrame;
import org.jdom.Element;

/**
 *
 * @author thomas
 */
public class WordNormalizationDialog extends javax.swing.JDialog implements MouseListener, MouseMotionListener {

    String normalizedWord;
    Element wordElement;

    public boolean escaped = false;
    java.awt.Frame parent;
    

    /** Creates new form WordNormalizationDialog */
    public WordNormalizationDialog(java.awt.Frame parent, boolean modal, Element wordElement, List<String> candidates) {
        super(parent, modal);
        //AlphaComposite instance = AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.5f);
        initComponents();
        
        this.wordElement = wordElement;
        this.parent = parent;
        
        //wordLabel.setText(wordElement.getText());
        // 01-03-2023 changed for issue #340
        wordLabel.setText(wordElement.getText().replaceAll("\\s", ""));
        normalizedWord = wordElement.getText().replaceAll("\\s", "");
        if (wordElement.getAttribute("n")!=null){
            normalizedWord = wordElement.getAttributeValue("n");
        }
        textField.setText(normalizedWord);

        setupList(candidates);

        formsList.addMouseListener(this);
        formsList.addMouseMotionListener(this);
        

        textField.selectAll();
        textField.requestFocus();

        ActionListener escapeKeyListener = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                escaped=true;
                exitDialog();
            }
        };
        KeyStroke escapeStroke = KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0);
        getRootPane().registerKeyboardAction(escapeKeyListener, escapeStroke, JComponent.WHEN_IN_FOCUSED_WINDOW);
        
        ActionListener enterKeyListener = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                String selForm = (String)(formsList.getSelectedValue());
                if (selForm!=null){
                    normalizedWord = selForm;
                }
                escaped=false;
                exitDialog();
            }
        };
        KeyStroke enterStroke = KeyStroke.getKeyStroke(KeyEvent.VK_ENTER, 0);
        getRootPane().registerKeyboardAction(enterKeyListener, enterStroke, JComponent.WHEN_IN_FOCUSED_WINDOW);

        
        ActionListener downKeyListener = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                if (formsList.getModel().getSize()==0) return;
                formsList.requestFocus();
                if (formsList.getSelectedIndex()<0){
                    formsList.setSelectedIndex(0);
                } else {
                    if (formsList.getSelectedIndex()+1 < formsList.getModel().getSize()){
                        formsList.setSelectedIndex(formsList.getSelectedIndex()+1);
                    } else {
                        formsList.setSelectedIndex(0);                    
                    }
                }
            }
        };
        KeyStroke downStroke = KeyStroke.getKeyStroke(KeyEvent.VK_DOWN, 0);
        getRootPane().registerKeyboardAction(downKeyListener, downStroke, JComponent.WHEN_IN_FOCUSED_WINDOW);
        
        playSelectionButton.setAction(((ApplicationFrame)(parent)).applicationControl.playSelectionAction);
        playSelectionButton.setToolTipText("Auswahl abspielen");
        
    }

    public String getNormalizedForm(){
        //changed 01-03-2017 (issue #62)
        //return normalizedWord;
        return normalizedWord.trim().replaceAll(" {2,}", " ");
    }
    
    public Element getWordElement(){
        return wordElement;
    }

    void setupList(List<String> candidates){
        DefaultListModel model = new DefaultListModel();
        for (String c : candidates){
            model.addElement(c);
        }
        formsList.setModel(model);

    }

    private void exitDialog() {
        if (getNormalizedForm().length()==0){
            escaped = true;
        }
        this.setVisible(false);
        this.dispose();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        transcribedFormPanel = new javax.swing.JPanel();
        wordLabel = new javax.swing.JLabel();
        editWordButton = new javax.swing.JButton();
        textField = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        playSelectionButton = new javax.swing.JButton();
        formsListScrollPane = new javax.swing.JScrollPane();
        formsList = new javax.swing.JList();
        dummyButtonsPanel = new javax.swing.JPanel();
        dummyButton1 = new javax.swing.JButton();
        dummyButton2 = new javax.swing.JButton();
        dummyButton3 = new javax.swing.JButton();
        dummyButton4 = new javax.swing.JButton();
        dummyButton5 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);

        mainPanel.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 51, 153), 1, true), javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5)));
        mainPanel.setOpaque(false);
        mainPanel.setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.Y_AXIS));

        transcribedFormPanel.setAlignmentX(0.0F);
        transcribedFormPanel.setLayout(new javax.swing.BoxLayout(transcribedFormPanel, javax.swing.BoxLayout.LINE_AXIS));

        wordLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        wordLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        wordLabel.setText("jLabel1");
        wordLabel.setToolTipText("Doppelklicken, um das transkribierte Wort zu korrigieren");
        wordLabel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 20));
        wordLabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                wordLabelMouseClicked(evt);
            }
        });
        transcribedFormPanel.add(wordLabel);

        editWordButton.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        editWordButton.setText("Bearbeiten...");
        editWordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editWordButtonActionPerformed(evt);
            }
        });
        transcribedFormPanel.add(editWordButton);

        jPanel1.add(transcribedFormPanel);

        textField.setForeground(new java.awt.Color(0, 102, 0));
        textField.setToolTipText("Normalisierte Form");
        textField.setMaximumSize(new java.awt.Dimension(400, 24));
        textField.setPreferredSize(new java.awt.Dimension(300, 24));
        textField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldActionPerformed(evt);
            }
        });
        jPanel1.add(textField);

        mainPanel.add(jPanel1, java.awt.BorderLayout.CENTER);

        playSelectionButton.setText(" [*]");
        jPanel2.add(playSelectionButton);

        mainPanel.add(jPanel2, java.awt.BorderLayout.EAST);

        getContentPane().add(mainPanel, java.awt.BorderLayout.PAGE_START);

        formsListScrollPane.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5)));
        formsListScrollPane.setOpaque(false);

        formsList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        formsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        formsList.setOpaque(false);
        formsListScrollPane.setViewportView(formsList);

        getContentPane().add(formsListScrollPane, java.awt.BorderLayout.CENTER);

        dummyButtonsPanel.setLayout(new javax.swing.BoxLayout(dummyButtonsPanel, javax.swing.BoxLayout.Y_AXIS));

        dummyButton1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        dummyButton1.setText("&");
        dummyButton1.setToolTipText("Wortfragment");
        dummyButton1.setMaximumSize(new java.awt.Dimension(45, 23));
        dummyButton1.setMinimumSize(new java.awt.Dimension(45, 23));
        dummyButton1.setPreferredSize(new java.awt.Dimension(45, 23));
        dummyButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertDummy(evt);
            }
        });
        dummyButtonsPanel.add(dummyButton1);

        dummyButton2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        dummyButton2.setText("%");
        dummyButton2.setToolTipText("Wortabbruch");
        dummyButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertDummy(evt);
            }
        });
        dummyButtonsPanel.add(dummyButton2);

        dummyButton3.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        dummyButton3.setText("$");
        dummyButton3.setToolTipText("Buchstabierung");
        dummyButton3.setEnabled(false);
        dummyButton3.setMaximumSize(new java.awt.Dimension(45, 23));
        dummyButton3.setMinimumSize(new java.awt.Dimension(45, 23));
        dummyButton3.setPreferredSize(new java.awt.Dimension(45, 23));
        dummyButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertDummy(evt);
            }
        });
        dummyButtonsPanel.add(dummyButton3);

        dummyButton4.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        dummyButton4.setText("#");
        dummyButton4.setToolTipText("nicht lexikalisierte Laute");
        dummyButton4.setMaximumSize(new java.awt.Dimension(45, 23));
        dummyButton4.setMinimumSize(new java.awt.Dimension(45, 23));
        dummyButton4.setPreferredSize(new java.awt.Dimension(45, 23));
        dummyButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertDummy(evt);
            }
        });
        dummyButtonsPanel.add(dummyButton4);

        dummyButton5.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        dummyButton5.setText("§");
        dummyButton5.setToolTipText("nicht-usuelle Interjektion");
        dummyButton5.setMaximumSize(new java.awt.Dimension(45, 23));
        dummyButton5.setMinimumSize(new java.awt.Dimension(45, 23));
        dummyButton5.setPreferredSize(new java.awt.Dimension(45, 23));
        dummyButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertDummy(evt);
            }
        });
        dummyButtonsPanel.add(dummyButton5);

        getContentPane().add(dummyButtonsPanel, java.awt.BorderLayout.EAST);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldActionPerformed
        normalizedWord = textField.getText();
        exitDialog();
    }//GEN-LAST:event_textFieldActionPerformed

    private void wordLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_wordLabelMouseClicked
       // double click brings up correction dialog 
       if (evt.getClickCount()==2){
           editWordForm();
       }
    }//GEN-LAST:event_wordLabelMouseClicked

    private void insertDummy(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertDummy
        JButton b = (JButton)(evt.getSource());
        String dummy = b.getText();
        textField.replaceSelection(dummy);
        //textField.requestFocus();
        normalizedWord = textField.getText();
        exitDialog();        
    }//GEN-LAST:event_insertDummy

    private void editWordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editWordButtonActionPerformed
           editWordForm();
    }//GEN-LAST:event_editWordButtonActionPerformed



    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                WordNormalizationDialog dialog = new WordNormalizationDialog(new javax.swing.JFrame(), true, null, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton dummyButton1;
    private javax.swing.JButton dummyButton2;
    private javax.swing.JButton dummyButton3;
    private javax.swing.JButton dummyButton4;
    private javax.swing.JButton dummyButton5;
    private javax.swing.JPanel dummyButtonsPanel;
    private javax.swing.JButton editWordButton;
    private javax.swing.JList formsList;
    private javax.swing.JScrollPane formsListScrollPane;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton playSelectionButton;
    private javax.swing.JTextField textField;
    private javax.swing.JPanel transcribedFormPanel;
    private javax.swing.JLabel wordLabel;
    // End of variables declaration//GEN-END:variables

    @Override
    public void mouseClicked(MouseEvent e) {
        //int i = formsList.locationToIndex(e.getPoint());
        normalizedWord = (String)(formsList.getSelectedValue());
        exitDialog();
    }

    @Override
    public void mousePressed(MouseEvent e) {
        
    }

    @Override
    public void mouseReleased(MouseEvent e) {
        
    }

    @Override
    public void mouseEntered(MouseEvent e) {
        int i = formsList.locationToIndex(e.getPoint());
        formsList.setSelectedIndex(i);
    }

    @Override
    public void mouseExited(MouseEvent e) {
        formsList.clearSelection();
    }

    @Override
    public void mouseDragged(MouseEvent e) {

    }

    @Override
    public void mouseMoved(MouseEvent e) {
        int i = formsList.locationToIndex(e.getPoint());
        formsList.setSelectedIndex(i);
    }

    private void editWordForm() {
        WordCorrectionDialog wordCorrectionDialog = new WordCorrectionDialog(parent, true, wordElement);
        wordCorrectionDialog.setLocationRelativeTo(this);
        wordCorrectionDialog.setVisible(true);
        if (wordCorrectionDialog.approved){
            Element newWordElement = wordCorrectionDialog.getWordElement();
            wordElement.setContent(newWordElement.removeContent()); 
            wordLabel.setText(wordElement.getText());
        }
    }



}
