/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * WordLabelPopupPanel.java
 *
 * Created on 09.03.2012, 12:34:40
 */
package org.exmaralda.orthonormal.gui;

import java.io.IOException;
import java.util.Iterator;
import org.exmaralda.orthonormal.lexicon.Tagset;
import org.jdom.Element;
import org.jdom.JDOMException;
import org.jdom.filter.AbstractFilter;

/**
 *
 * @author thomas
 */
public class WordLabelPopupPanel extends javax.swing.JPanel {

    Tagset tagset;
    AbstractFilter textFilter = new AbstractFilter(){
        public boolean matches(Object o) {
            return ((o instanceof org.jdom.Text) && ((org.jdom.Text)o).getTextTrim().length()>0);
        }
    };
    
    /** Creates new form WordLabelPopupPanel */
    public WordLabelPopupPanel() {
        try {
            tagset = new Tagset();
        } catch (JDOMException ex) {
            ex.printStackTrace();
        } catch (IOException ex) {
            ex.printStackTrace();
        }
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        wordLabel = new javax.swing.JLabel();
        normalizedLabel = new javax.swing.JLabel();
        tagLabel = new javax.swing.JLabel();
        categoryLabel = new javax.swing.JLabel();
        descriptionLabel = new javax.swing.JLabel();
        probabilityLabel = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(java.awt.Color.blue, 3), javax.swing.BorderFactory.createEmptyBorder(4, 4, 4, 4)));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        wordLabel.setFont(new java.awt.Font("Tahoma", 1, 11));
        wordLabel.setText("jLabel1");
        add(wordLabel);

        normalizedLabel.setForeground(new java.awt.Color(102, 102, 102));
        normalizedLabel.setText("jLabel1");
        add(normalizedLabel);

        tagLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        tagLabel.setForeground(java.awt.Color.blue);
        tagLabel.setText("jLabel1");
        add(tagLabel);

        categoryLabel.setFont(new java.awt.Font("Tahoma", 2, 11));
        categoryLabel.setText("jLabel1");
        add(categoryLabel);

        descriptionLabel.setFont(new java.awt.Font("Tahoma", 2, 11));
        descriptionLabel.setText("jLabel1");
        add(descriptionLabel);

        probabilityLabel.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        probabilityLabel.setText("p=");
        add(probabilityLabel);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel categoryLabel;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JLabel normalizedLabel;
    private javax.swing.JLabel probabilityLabel;
    private javax.swing.JLabel tagLabel;
    private javax.swing.JLabel wordLabel;
    // End of variables declaration//GEN-END:variables

    void setData(Element wordElement) {
        String tag = wordElement.getAttributeValue("pos");
        String form = getWordText(wordElement);
        String normalizedForm = form;
        if (wordElement.getAttribute("n")!=null){
            normalizedForm = wordElement.getAttributeValue("n");
        }
        String p = "???";
        if (wordElement.getAttribute("p-pos")!=null){
            p = wordElement.getAttributeValue("p-pos");
        }
        
        wordLabel.setText(form);
        normalizedLabel.setText(normalizedForm);
        tagLabel.setText(tag);
        categoryLabel.setText(tagset.getCategory(tag));
        descriptionLabel.setText(tagset.getDescription(tag));
        probabilityLabel.setText(p);
    }

    String getWordText(Element wordElement){        
        Iterator i = wordElement.getDescendants(textFilter);
        StringBuffer result = new StringBuffer();
        while (i.hasNext()){
            result.append(((org.jdom.Text)(i.next())).getText());
        }
        return result.toString();
    }
    
}
