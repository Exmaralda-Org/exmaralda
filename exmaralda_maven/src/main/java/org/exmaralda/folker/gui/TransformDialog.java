/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.exmaralda.folker.gui;

import java.io.File;
import javax.swing.JFileChooser;
import org.exmaralda.folker.utilities.PreferencesUtilities;
import org.exmaralda.partitureditor.jexmaraldaswing.fileFilters.ParameterFileFilter;

/**
 *
 * @author Thomas_Schmidt
 */
public class TransformDialog extends javax.swing.JDialog {

    public boolean approved = false;
    
    /**
     * Creates new form TransformDialog
     * @param parent
     * @param modal
     */
    public TransformDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        String xslDirectory = PreferencesUtilities.getProperty("xslDirectory", "");
        xslTextField.setText(xslDirectory);
        String outputDirectory = PreferencesUtilities.getProperty("transformationOutputDirectory", "");
        outputTextField.setText(outputDirectory);
    }
    
    public String getXSL(){
        return xslTextField.getText();
    }
    
    public String getOutput(){
        return outputTextField.getText();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okCancelPanel = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        mainPanel = new javax.swing.JPanel();
        xslPanel = new javax.swing.JPanel();
        xslLabel = new javax.swing.JLabel();
        xslTextField = new javax.swing.JTextField();
        browseXSLButton = new javax.swing.JButton();
        outputPanel = new javax.swing.JPanel();
        outputLabel = new javax.swing.JLabel();
        outputTextField = new javax.swing.JTextField();
        browseOutputButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Set XSL transformation parameters");

        okButton.setText("OK");
        okButton.setToolTipText("Apply transformation");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        okCancelPanel.add(okButton);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        okCancelPanel.add(cancelButton);

        getContentPane().add(okCancelPanel, java.awt.BorderLayout.SOUTH);

        mainPanel.setLayout(new javax.swing.BoxLayout(mainPanel, javax.swing.BoxLayout.Y_AXIS));

        xslPanel.setLayout(new javax.swing.BoxLayout(xslPanel, javax.swing.BoxLayout.LINE_AXIS));

        xslLabel.setText("XSL stylesheet: ");
        xslPanel.add(xslLabel);

        xslTextField.setMaximumSize(new java.awt.Dimension(600, 20));
        xslTextField.setPreferredSize(new java.awt.Dimension(400, 20));
        xslPanel.add(xslTextField);

        browseXSLButton.setText("Browse...");
        browseXSLButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseXSLButtonActionPerformed(evt);
            }
        });
        xslPanel.add(browseXSLButton);

        mainPanel.add(xslPanel);

        outputPanel.setLayout(new javax.swing.BoxLayout(outputPanel, javax.swing.BoxLayout.LINE_AXIS));

        outputLabel.setText("Output file: ");
        outputLabel.setMaximumSize(new java.awt.Dimension(77, 14));
        outputLabel.setMinimumSize(new java.awt.Dimension(77, 14));
        outputLabel.setPreferredSize(new java.awt.Dimension(77, 14));
        outputPanel.add(outputLabel);

        outputTextField.setMaximumSize(new java.awt.Dimension(600, 20));
        outputTextField.setPreferredSize(new java.awt.Dimension(400, 20));
        outputPanel.add(outputTextField);

        browseOutputButton.setText("Browse...");
        browseOutputButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseOutputButtonActionPerformed(evt);
            }
        });
        outputPanel.add(browseOutputButton);

        mainPanel.add(outputPanel);

        getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void browseXSLButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseXSLButtonActionPerformed
        JFileChooser jfc = new JFileChooser();
        jfc.setFileFilter(new ParameterFileFilter("xsl", "XSL files"));
        jfc.setDialogTitle("Bitte Stylesheet-Datei ausw√§hlen");
        jfc.setCurrentDirectory(new File(xslTextField.getText()));      
        int result = jfc.showOpenDialog(this);
        if (result == JFileChooser.APPROVE_OPTION){
            xslTextField.setText(jfc.getSelectedFile().getAbsolutePath());
        }        
    }//GEN-LAST:event_browseXSLButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        approved = true;
        PreferencesUtilities.setProperty("xslDirectory", xslTextField.getText());
        PreferencesUtilities.setProperty("transformationOutputDirectory", outputTextField.getText());     
        dispose();
    }//GEN-LAST:event_okButtonActionPerformed

    private void browseOutputButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseOutputButtonActionPerformed
        JFileChooser jfc = new JFileChooser();
        
        String[] suffixes = {"html", "txt", "csv"};
        jfc.setFileFilter(new ParameterFileFilter(suffixes, "TXT, CSV or HTML files"));
        jfc.setDialogTitle("Bitte Ausgabe-Datei festlegen (Endung txt, csv oder html)");
        jfc.setCurrentDirectory(new File(xslTextField.getText()));      
        int result = jfc.showSaveDialog(this);
        if (result == JFileChooser.APPROVE_OPTION){
            outputTextField.setText(jfc.getSelectedFile().getAbsolutePath());
        }        

    }//GEN-LAST:event_browseOutputButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TransformDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TransformDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TransformDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TransformDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                TransformDialog dialog = new TransformDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browseOutputButton;
    private javax.swing.JButton browseXSLButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton okButton;
    private javax.swing.JPanel okCancelPanel;
    private javax.swing.JLabel outputLabel;
    private javax.swing.JPanel outputPanel;
    private javax.swing.JTextField outputTextField;
    private javax.swing.JLabel xslLabel;
    private javax.swing.JPanel xslPanel;
    private javax.swing.JTextField xslTextField;
    // End of variables declaration//GEN-END:variables
}
