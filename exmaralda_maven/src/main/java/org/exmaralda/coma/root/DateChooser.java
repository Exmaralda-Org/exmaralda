/* Copyright (C) 2004  Marco Avidano
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * See http://www.gnu.org/licenses/gpl.html for the complete text of the license.
 */

package org.exmaralda.coma.root;

import java.awt.Font;
import java.awt.Frame;
import java.awt.event.MouseListener;
import java.util.Calendar;
import java.util.Iterator;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Set;

import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.ScrollPaneConstants;

/**
 * DateChooser creates a calendar input dialog, that avoid you to set easily the
 * date.
 */

public class DateChooser extends javax.swing.JDialog {

	final String VERSION = "1.2.4.93";

	final int YEAR_RANGE = 100;


  final Font f1 = new Font("Arial", Font.PLAIN, 11);
  final Font f2 = new Font("Arial", Font.BOLD, 11);
  
  /** Create the calendar input dialog.
   * @param parent the Frame to be parent to.
   * @param modal if <B>true</B> makes the calendar input dialog modal.
   * @param title the string to be showed as title of the calendar input dialog.
   * @param oriYear Set the starting year (0 for current year).
   * @param oriMonth Set the starting month (Current month=0, Jan=1, Feb=2, ..., Dec=12).
   */
  public DateChooser(Frame parent, boolean modal, String title, int oriYear, int oriMonth) {
    super(parent, modal);
    super.setTitle(title);
    
    if(oriYear>0 && oriYear>CURRENT_YEAR-YEAR_RANGE-1 && oriYear<CURRENT_YEAR+YEAR_RANGE) jdDateChooserSelectedYear = oriYear;
    if(oriMonth>0 && oriMonth<13) jdDateChooserSelectedMonth = oriMonth-1;
    
    MODAL = modal;
    initVars();
    initComponents();
    
    for(int i=0; i<42; i++) {
      dayOfMonthLabel[i] = new JLabel("");
      dayOfMonthLabel[i].setFont(f1);
      dayOfMonthLabel[i].setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
      if(modal) dayOfMonthLabel[i].addMouseListener(new java.awt.event.MouseAdapter() {
        @Override
		public void mouseClicked(java.awt.event.MouseEvent evt) {
          JLabel sd = (JLabel)evt.getSource();
          SELECTED_DATE = sd.getToolTipText();
          SELECTED_DAY = sd.getText();
          SELECTED_MONTH = ""+(jdDateChooserSelectedMonth+1);
          SELECTED_YEAR = ""+jdDateChooserSelectedYear;
          SELECTED_DATE_MYSQL = SELECTED_YEAR+"-"+SELECTED_MONTH+"-"+SELECTED_DAY;
          dispose();
        }
      });
      jdDateChooserDayPanel.add(dayOfMonthLabel[i]);
    }
    jdDateChooserPopulateDayPanel();
  }
  
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  private void initComponents() {//GEN-BEGIN:initComponents
    dcAbout = new JDialog(this);
    dcAbout.setSize(250,150);
    jTabbedPane1 = new javax.swing.JTabbedPane();
    jPanel2 = new javax.swing.JPanel();
    jLabel1 = new javax.swing.JLabel();
    jLabel2 = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();
    jPanel3 = new javax.swing.JPanel();
    jScrollPane1 = new javax.swing.JScrollPane();
    jTextArea1 = new javax.swing.JTextArea();
    jPanel12 = new javax.swing.JPanel();
    jdDateChooserYearPrev = new javax.swing.JButton();
    jdDateChooserMonthPrev = new javax.swing.JButton();
    jdDateChooserMonth = new javax.swing.JComboBox();
    Set setMESI = MESI.entrySet();
    Iterator itrMESI = setMESI.iterator();
    while(itrMESI.hasNext()) {
      Map.Entry me = (Map.Entry)itrMESI.next();
      jdDateChooserMonth.addItem(me.getKey());
    }
    jdDateChooserMonth.setSelectedIndex(jdDateChooserSelectedMonth);
    jdDateChooserYear = new javax.swing.JComboBox();
    jdDateChooserMonthNext = new javax.swing.JButton();
    jdDateChooserYearNext = new javax.swing.JButton();
    jdDateChooserClose = new javax.swing.JButton();
    jLabel10 = new javax.swing.JLabel();
    jLabel11 = new javax.swing.JLabel();
    jLabel12 = new javax.swing.JLabel();
    jLabel13 = new javax.swing.JLabel();
    jLabel14 = new javax.swing.JLabel();
    jLabel15 = new javax.swing.JLabel();
    jLabel16 = new javax.swing.JLabel();
    jdDateChooserDayPanel = new javax.swing.JPanel();
    jPanel1 = new javax.swing.JPanel();
    jdStatusBarDate = new javax.swing.JLabel();
    jdStatusBarWoY = new javax.swing.JLabel();
    jdStatusBarDoY = new javax.swing.JLabel();
    jdStatusBarAbout = new javax.swing.JLabel();

    dcAbout.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    dcAbout.setTitle("DateChooser "+VERSION);
    dcAbout.setLocationRelativeTo(this);
    dcAbout.setModal(true);
    jTabbedPane1.setFont(f1);
    jPanel2.setLayout(new AbsoluteLayout());

    jPanel2.setBorder(new javax.swing.border.EtchedBorder());
    jLabel1.setFont(f1);
    jLabel1.setText("DateChooser " + VERSION);
    jPanel2.add(jLabel1, new AbsoluteConstraints(45, 20, -1, -1));

    jLabel2.setFont(f1);
    jLabel2.setForeground(new java.awt.Color(0, 0, 255));
    jLabel2.setText("http://wiz.homelinux.net/");
    jPanel2.add(jLabel2, new AbsoluteConstraints(45, 70, -1, -1));

    jLabel3.setFont(f1);
    jLabel3.setText("(c) 2004 Marco Avidano");
    jPanel2.add(jLabel3, new AbsoluteConstraints(45, 45, -1, -1));

    jTabbedPane1.addTab("About", jPanel2);

    jPanel3.setLayout(new java.awt.BorderLayout());

    jPanel3.setBorder(new javax.swing.border.EtchedBorder());
    jScrollPane1.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
    jTextArea1.setBackground(new java.awt.Color(204, 204, 204));
    jTextArea1.setEditable(false);
    jTextArea1.setFont(f1);
    jTextArea1.setText("Copyright (C) 2004  Marco Avidano\n\nThis program is free software; you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation; either version 2 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program; if not, write to the Free Software\nFoundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n\nSee http://www.gnu.org/licenses/gpl.html for the complete text of the license. ");
    jTextArea1.setToolTipText("GNU GENERAL PUBLIC LICENSE v2");
    jScrollPane1.setViewportView(jTextArea1);

    jPanel3.add(jScrollPane1, java.awt.BorderLayout.CENTER);

    jTabbedPane1.addTab("License Agreement", jPanel3);

    dcAbout.getContentPane().add(jTabbedPane1, java.awt.BorderLayout.CENTER);

    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setModal(true);
    setResizable(false);
    addWindowListener(new java.awt.event.WindowAdapter() {
      @Override
	public void windowClosing(java.awt.event.WindowEvent evt) {
        closeDialog(evt);
      }
    });

    jPanel12.setLayout(new AbsoluteLayout());

    jdDateChooserYearPrev.setFont(f1);
    jdDateChooserYearPrev.setText("<<");
    jdDateChooserYearPrev.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
    jdDateChooserYearPrev.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jdDateChooserYearPrevActionPerformed(evt);
      }
    });

    jPanel12.add(jdDateChooserYearPrev, new AbsoluteConstraints(0, 0, 30, 30));

    jdDateChooserMonthPrev.setFont(f1);
    jdDateChooserMonthPrev.setText("<");
    jdDateChooserMonthPrev.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
    jdDateChooserMonthPrev.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jdDateChooserMonthPrevActionPerformed(evt);
      }
    });

    jPanel12.add(jdDateChooserMonthPrev, new AbsoluteConstraints(30, 0, 30, 30));

    jdDateChooserMonth.setFont(f1);
    jdDateChooserMonth.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
    jdDateChooserMonth.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jdDateChooserMonthActionPerformed(evt);
      }
    });

    jPanel12.add(jdDateChooserMonth, new AbsoluteConstraints(60, 0, 90, 30));

    jdDateChooserYear.setFont(f1);
    jdDateChooserYear.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
    for(int i=CURRENT_YEAR-YEAR_RANGE; i<CURRENT_YEAR+YEAR_RANGE; i++) jdDateChooserYear.addItem(""+i);
    jdDateChooserYear.setSelectedItem(""+jdDateChooserSelectedYear);
    jdDateChooserYear.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jdDateChooserYearActionPerformed(evt);
      }
    });

    jPanel12.add(jdDateChooserYear, new AbsoluteConstraints(150, 0, 60, 30));

    jdDateChooserMonthNext.setFont(f1);
    jdDateChooserMonthNext.setText(">");
    jdDateChooserMonthNext.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
    jdDateChooserMonthNext.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jdDateChooserMonthNextActionPerformed(evt);
      }
    });

    jPanel12.add(jdDateChooserMonthNext, new AbsoluteConstraints(210, 0, 30, 30));

    jdDateChooserYearNext.setFont(f1);
    jdDateChooserYearNext.setText(">>");
    jdDateChooserYearNext.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
    jdDateChooserYearNext.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jdDateChooserYearNextActionPerformed(evt);
      }
    });

    jPanel12.add(jdDateChooserYearNext, new AbsoluteConstraints(240, 0, 30, 30));

    jdDateChooserClose.setFont(f1);
    jdDateChooserClose.setText("X");
    jdDateChooserClose.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.RAISED));
    jdDateChooserClose.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jdDateChooserCloseActionPerformed(evt);
      }
    });

    jPanel12.add(jdDateChooserClose, new AbsoluteConstraints(270, 0, 30, 30));

    jLabel10.setFont(f2);
    jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel10.setText("Mon");
    jLabel10.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
    jPanel12.add(jLabel10, new AbsoluteConstraints(0, 35, 43, 20));

    jLabel11.setFont(f2);
    jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel11.setText("Tue");
    jLabel11.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
    jPanel12.add(jLabel11, new AbsoluteConstraints(42, 35, 43, 20));

    jLabel12.setFont(f2);
    jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel12.setText("Wed");
    jLabel12.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
    jPanel12.add(jLabel12, new AbsoluteConstraints(84, 35, 43, 20));

    jLabel13.setFont(f2);
    jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel13.setText("Thu");
    jLabel13.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
    jPanel12.add(jLabel13, new AbsoluteConstraints(126, 35, 43, 20));

    jLabel14.setFont(f2);
    jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel14.setText("Fri");
    jLabel14.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
    jPanel12.add(jLabel14, new AbsoluteConstraints(168, 35, 43, 20));

    jLabel15.setFont(f2);
    jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel15.setText("Sat");
    jLabel15.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
    jPanel12.add(jLabel15, new AbsoluteConstraints(210, 35, 43, 20));

    jLabel16.setFont(f2);
    jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    jLabel16.setText("Sun");
    jLabel16.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0)));
    jPanel12.add(jLabel16, new AbsoluteConstraints(252, 35, 45, 20));

    getContentPane().add(jPanel12, java.awt.BorderLayout.NORTH);

    jdDateChooserDayPanel.setLayout(new java.awt.GridLayout(6, 7, 1, 1));

    jdDateChooserDayPanel.addMouseWheelListener(new java.awt.event.MouseWheelListener() {
      public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
        jdDateChooserDayPanelMouseWheelMoved(evt);
      }
    });

    getContentPane().add(jdDateChooserDayPanel, java.awt.BorderLayout.CENTER);

    jPanel1.setLayout(new AbsoluteLayout());

    jdStatusBarDate.setFont(f1);
    jdStatusBarDate.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.LOWERED));
    jPanel1.add(jdStatusBarDate, new AbsoluteConstraints(0, 0, 90, 17));

    jdStatusBarWoY.setFont(f1);
    jdStatusBarWoY.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.LOWERED));
    jPanel1.add(jdStatusBarWoY, new AbsoluteConstraints(160, 0, 70, 17));

    jdStatusBarDoY.setFont(f1);
    jdStatusBarDoY.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.LOWERED));
    jPanel1.add(jdStatusBarDoY, new AbsoluteConstraints(90, 0, 70, 17));

    jdStatusBarAbout.setFont(f1);
    jdStatusBarAbout.setText("About...");
    jdStatusBarAbout.setBorder(new javax.swing.border.BevelBorder(javax.swing.border.BevelBorder.LOWERED));
    jdStatusBarAbout.addMouseListener(new java.awt.event.MouseAdapter() {
      @Override
	public void mouseClicked(java.awt.event.MouseEvent evt) {
        jdStatusBarAboutMouseClicked(evt);
      }
    });

    jPanel1.add(jdStatusBarAbout, new AbsoluteConstraints(230, 0, 70, 17));

    getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

    java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
    setBounds((screenSize.width-305)/2, (screenSize.height-220)/2, 305, 220);
  }//GEN-END:initComponents
  
  private void jdDateChooserDayPanelMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_jdDateChooserDayPanelMouseWheelMoved
    if(evt.getWheelRotation()<0) jdDateChooserPrevMonth();
    else jdDateChooserNextMonth();
  }//GEN-LAST:event_jdDateChooserDayPanelMouseWheelMoved
  
  private void jdStatusBarAboutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jdStatusBarAboutMouseClicked
    dcAbout.setVisible(true);
  }//GEN-LAST:event_jdStatusBarAboutMouseClicked
  
  private void jdDateChooserYearPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jdDateChooserYearPrevActionPerformed
    jdDateChooserSelectedYear = jdDateChooserSelectedYear - 1;
    jdDateChooserYear.setSelectedItem(""+jdDateChooserSelectedYear);
    jdDateChooserPopulateDayPanel();
  }//GEN-LAST:event_jdDateChooserYearPrevActionPerformed
  
  private void jdDateChooserMonthPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jdDateChooserMonthPrevActionPerformed
    jdDateChooserPrevMonth();
  }//GEN-LAST:event_jdDateChooserMonthPrevActionPerformed
  
  private void jdDateChooserMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jdDateChooserMonthActionPerformed
    jdDateChooserSelectedMonth = Integer.parseInt(""+MESI.get(jdDateChooserMonth.getSelectedItem()))-1;
    jdDateChooserPopulateDayPanel();
  }//GEN-LAST:event_jdDateChooserMonthActionPerformed
  
  private void jdDateChooserYearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jdDateChooserYearActionPerformed
    jdDateChooserSelectedYear = Integer.parseInt(""+jdDateChooserYear.getSelectedItem());
    jdDateChooserPopulateDayPanel();
  }//GEN-LAST:event_jdDateChooserYearActionPerformed
  
  private void jdDateChooserMonthNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jdDateChooserMonthNextActionPerformed
    jdDateChooserNextMonth();
  }//GEN-LAST:event_jdDateChooserMonthNextActionPerformed
  
  private void jdDateChooserYearNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jdDateChooserYearNextActionPerformed
    jdDateChooserSelectedYear = jdDateChooserSelectedYear + 1;
    jdDateChooserYear.setSelectedItem(""+jdDateChooserSelectedYear);
    jdDateChooserPopulateDayPanel();
  }//GEN-LAST:event_jdDateChooserYearNextActionPerformed
  
  private void jdDateChooserCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jdDateChooserCloseActionPerformed
    closeDateChooser();
  }//GEN-LAST:event_jdDateChooserCloseActionPerformed
  
  /** Closes the dialog */
  private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
    closeDateChooser();
  }//GEN-LAST:event_closeDialog
  
  /** */
  public static void main(String args[]) {
    new DateChooser(new javax.swing.JFrame(), false, "Select date", 0, 0).setVisible(true);
  }
  
  private void jdDateChooserPopulateDayPanel() {
    cdr.set(jdDateChooserSelectedYear, jdDateChooserSelectedMonth, 1);
    int jdDay = 3 - cdr.get(Calendar.DAY_OF_WEEK);
    if(jdDay>0) jdDay -= 7;
    for(int i=0; i<42; i++,jdDay++) {
      MouseListener ml[] = dayOfMonthLabel[i].getMouseListeners();
      for(int j=1; j<ml.length; j++) dayOfMonthLabel[i].removeMouseListener(ml[j]);
      if(jdDay<1 || jdDay>cdr.getActualMaximum(Calendar.DAY_OF_MONTH)) {
        dayOfMonthLabel[i].setText("");
        dayOfMonthLabel[i].setToolTipText(null);
        jdStatusBarDate.setText("");
        jdStatusBarWoY.setText("");
        jdStatusBarDoY.setText("");
        dayOfMonthLabel[i].addMouseListener(new java.awt.event.MouseAdapter() {
          @Override
		public void mouseEntered(java.awt.event.MouseEvent evt) {
            jdStatusBarDate.setText("");
            jdStatusBarWoY.setText("");
            jdStatusBarDoY.setText("");
          }
        });
      } else {
        cdr.set(jdDateChooserSelectedYear, jdDateChooserSelectedMonth, jdDay);
        DOY[jdDay] = cdr.get(Calendar.DAY_OF_YEAR);
        WOY[jdDay] = cdr.get(Calendar.WEEK_OF_YEAR);
        dayOfMonthLabel[i].setText(""+jdDay);
        dayOfMonthLabel[i].setToolTipText(jdDay+"/"+(jdDateChooserSelectedMonth+1)+"/"+jdDateChooserSelectedYear);
        dayOfMonthLabel[i].addMouseListener(new java.awt.event.MouseAdapter() {
          @Override
		public void mouseEntered(java.awt.event.MouseEvent evt) {
            JLabel sd = (JLabel)evt.getSource();
            jdStatusBarDate.setText(sd.getToolTipText());
            jdStatusBarWoY.setText("Week: "+WOY[Integer.parseInt(sd.getText())]);
            jdStatusBarDoY.setText("Day: "+DOY[Integer.parseInt(sd.getText())]);
          }
        });
      }
    }
  }
  
  private void initVars() {
    cdr.setFirstDayOfWeek(Calendar.MONDAY);
    MESI.put("January","01");
    MESI.put("February","02");
    MESI.put("March","03");
    MESI.put("April","04");
    MESI.put("May","05");
    MESI.put("June","06");
    MESI.put("July","07");
    MESI.put("Agugust","08");
    MESI.put("September","09");
    MESI.put("October","10");
    MESI.put("November","11");
    MESI.put("December","12");
  }
  
  /** Return the selected date into the format dd/mm/yyyy
   * @return the selected date like dd/mm/yyyy, without leading zeroes.
   */
  public String getSelectedDate() {
    return SELECTED_DATE;
  }
  /** Return the selected day
   * @return the selected day, without leading zeroes
   */
  public String getSelectedDay() {
    return SELECTED_DAY;
  }
  /** Return the selected month
   * @return the selected month, without leading zeroes
   */
  public String getSelectedMonth() {
    return SELECTED_MONTH;
  }
  /** Return the selected year
   * @return the selected year, without leading zeroes
   */
  public String getSelectedYear() {
    return SELECTED_YEAR;
  }
  
  /** Return the version of DateChooser
   * @return the version on DateChooser
   */
  public String getVersion() {
    return VERSION;
  }
  /** Return the selected date into the format yyyy-mm-dd, useful for MySQL query.
   * @return the selected date like yyyy-mm-dd, without leading zeroes, useful for MySQL
   * query.
   */
  public String getSelectedDateMysql() {
    return SELECTED_DATE_MYSQL;
  }
  
  private void closeDateChooser() {
    this.dispose();
    if(!MODAL) System.exit(0);
  }
  
  private void jdDateChooserPrevMonth() {
    if(jdDateChooserSelectedMonth>0) {
      jdDateChooserSelectedMonth = jdDateChooserSelectedMonth - 1;
    } else {
      jdDateChooserSelectedMonth = 11;
      jdDateChooserSelectedYear = jdDateChooserSelectedYear - 1;
    }
    jdDateChooserMonth.setSelectedIndex(jdDateChooserSelectedMonth);
    jdDateChooserYear.setSelectedItem(""+jdDateChooserSelectedYear);
    jdDateChooserPopulateDayPanel();
  }
  
  private void jdDateChooserNextMonth() {
    if(jdDateChooserSelectedMonth<11) {
      jdDateChooserSelectedMonth = jdDateChooserSelectedMonth + 1;
    } else {
      jdDateChooserSelectedMonth = 0;
      jdDateChooserSelectedYear = jdDateChooserSelectedYear + 1;
    }
    jdDateChooserMonth.setSelectedIndex(jdDateChooserSelectedMonth);
    jdDateChooserYear.setSelectedItem(""+jdDateChooserSelectedYear);
    jdDateChooserPopulateDayPanel();
  }

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JDialog dcAbout;

	private javax.swing.JLabel jLabel1;

	private javax.swing.JLabel jLabel10;

	private javax.swing.JLabel jLabel11;

	private javax.swing.JLabel jLabel12;

	private javax.swing.JLabel jLabel13;

	private javax.swing.JLabel jLabel14;

	private javax.swing.JLabel jLabel15;

	private javax.swing.JLabel jLabel16;

	private javax.swing.JLabel jLabel2;

	private javax.swing.JLabel jLabel3;

	private javax.swing.JPanel jPanel1;

	private javax.swing.JPanel jPanel12;

	private javax.swing.JPanel jPanel2;

	private javax.swing.JPanel jPanel3;

	private javax.swing.JScrollPane jScrollPane1;

	private javax.swing.JTabbedPane jTabbedPane1;

	private javax.swing.JTextArea jTextArea1;

	private javax.swing.JButton jdDateChooserClose;

	private javax.swing.JPanel jdDateChooserDayPanel;

	private javax.swing.JComboBox jdDateChooserMonth;

	private javax.swing.JButton jdDateChooserMonthNext;

	private javax.swing.JButton jdDateChooserMonthPrev;

	private javax.swing.JComboBox jdDateChooserYear;

	private javax.swing.JButton jdDateChooserYearNext;

	private javax.swing.JButton jdDateChooserYearPrev;

	private javax.swing.JLabel jdStatusBarAbout;

	private javax.swing.JLabel jdStatusBarDate;

	private javax.swing.JLabel jdStatusBarDoY;

	private javax.swing.JLabel jdStatusBarWoY;

	// End of variables declaration//GEN-END:variables
	private LinkedHashMap MESI = new LinkedHashMap();

	private int CURRENT_MONTH = Calendar.getInstance().get(Calendar.MONTH);

	private int CURRENT_YEAR = Calendar.getInstance().get(Calendar.YEAR);


  private int jdDateChooserSelectedMonth = CURRENT_MONTH;
  private int jdDateChooserSelectedYear = CURRENT_YEAR;
  
  private Calendar cdr = Calendar.getInstance();

	private JLabel[] dayOfMonthLabel = new JLabel[42];

	private int DOY[] = new int[32];

	private int WOY[] = new int[32];


  
  private String SELECTED_DATE = null;
  private String SELECTED_DAY = null;

	private String SELECTED_MONTH = null;

	private String SELECTED_YEAR = null;

  private String SELECTED_DATE_MYSQL = null;
  private boolean MODAL;
}