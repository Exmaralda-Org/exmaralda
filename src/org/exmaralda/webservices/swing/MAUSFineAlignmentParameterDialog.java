/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.exmaralda.webservices.swing;

import java.util.HashMap;

/**
 *
 * @author Thomas_Schmidt
 */
public class MAUSFineAlignmentParameterDialog extends javax.swing.JDialog {

    public boolean approved;

    /**
     * Creates new form MausFineAlignmentParameterDialog
     */
    public MAUSFineAlignmentParameterDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.languageComboBox.setRenderer(new MAUSLanguagesComboBoxRenderer());        
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        intervalPanel = new javax.swing.JPanel();
        minLabel = new javax.swing.JLabel();
        minSpinner = new javax.swing.JSpinner();
        maxSpinner = new javax.swing.JSpinner();
        maxLabel = new javax.swing.JLabel();
        languagePanel = new javax.swing.JPanel();
        languageLabel = new javax.swing.JLabel();
        languageComboBox = new javax.swing.JComboBox<>();
        okCancelPanel = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("MAUS Fine Alignment");

        mainPanel.setLayout(new javax.swing.BoxLayout(mainPanel, javax.swing.BoxLayout.Y_AXIS));

        minLabel.setText("Minimum Interval Length (s)");
        intervalPanel.add(minLabel);

        minSpinner.setModel(new javax.swing.SpinnerNumberModel(5.0d, 0.0d, 10.0d, 0.2d));
        minSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                minSpinnerStateChanged(evt);
            }
        });
        intervalPanel.add(minSpinner);

        maxSpinner.setModel(new javax.swing.SpinnerNumberModel(10.0d, 5.0d, 25.0d, 0.5d));
        maxSpinner.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                maxSpinnerStateChanged(evt);
            }
        });
        intervalPanel.add(maxSpinner);

        maxLabel.setText("Maximum Interval Length (s)");
        intervalPanel.add(maxLabel);

        mainPanel.add(intervalPanel);

        languageLabel.setText("Language: ");
        languagePanel.add(languageLabel);

        languageComboBox.setModel(new javax.swing.DefaultComboBoxModel(MAUSParameterDialog.LANGUAGES));
        languagePanel.add(languageComboBox);

        mainPanel.add(languagePanel);

        getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        okCancelPanel.add(okButton);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        okCancelPanel.add(cancelButton);

        getContentPane().add(okCancelPanel, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void minSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_minSpinnerStateChanged
        harmonizeSpinners();
    }//GEN-LAST:event_minSpinnerStateChanged

    private void maxSpinnerStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_maxSpinnerStateChanged
        harmonizeSpinners();
    }//GEN-LAST:event_maxSpinnerStateChanged

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        approved = true;
        dispose();
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
       dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MAUSFineAlignmentParameterDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MAUSFineAlignmentParameterDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MAUSFineAlignmentParameterDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MAUSFineAlignmentParameterDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MAUSFineAlignmentParameterDialog dialog = new MAUSFineAlignmentParameterDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    public HashMap<String, Object> getMAUSFineAlignmentParameters() {
        HashMap<String, Object> result = new HashMap<String, Object>();
        result.put("LANGUAGE", ((String[])languageComboBox.getSelectedItem())[0]);
        result.put("MIN-INTERVAL-LENGTH", minSpinner.getValue());
        result.put("MAX-INTERVAL-LENGTH", maxSpinner.getValue());
        
        return result;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel intervalPanel;
    private javax.swing.JComboBox<String> languageComboBox;
    private javax.swing.JLabel languageLabel;
    private javax.swing.JPanel languagePanel;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JLabel maxLabel;
    private javax.swing.JSpinner maxSpinner;
    private javax.swing.JLabel minLabel;
    private javax.swing.JSpinner minSpinner;
    private javax.swing.JButton okButton;
    private javax.swing.JPanel okCancelPanel;
    // End of variables declaration//GEN-END:variables

    private void harmonizeSpinners() {
        double min = (double) minSpinner.getValue();
        double max = (double) maxSpinner.getValue();
        if (min>max){
            minSpinner.setValue(max);
        }
    }
}
