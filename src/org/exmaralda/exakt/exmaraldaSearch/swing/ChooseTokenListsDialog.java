/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package org.exmaralda.exakt.exmaraldaSearch.swing;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import javax.swing.JCheckBox;
import org.exmaralda.exakt.exmaraldaSearch.COMACorpusInterface;

/**
 *
 * @author bernd
 */
public class ChooseTokenListsDialog extends javax.swing.JDialog {

    List<JCheckBox> annotationNamesCheckBoxes = new ArrayList<>();
    
    /**
     * Creates new form ChooseTokenListsDialog
     */
    public ChooseTokenListsDialog(java.awt.Frame parent, boolean modal, COMACorpusInterface corpus) {
        super(parent, modal);
        initComponents();
        
        boolean isWordSegmented = corpus.isWordSegmented();
        this.createWordListCheckBox.setEnabled(isWordSegmented);
        this.createWordListCheckBox.setSelected(isWordSegmented);
        String name = corpus.getCorpusName();
        this.corpusNameLabel.setText(name);
        if (!isWordSegmented){
            createWordListCheckBox.setToolTipText("The corpus " + name + " does not have a word segmentation. ");
        }
        
        HashSet<String> annotationNames = corpus.getAnnotationNames();
        for (String annotationName : annotationNames){
            JCheckBox checkBox = new JCheckBox(annotationName);
            annotationTokenListsPanel.add(checkBox);
            annotationNamesCheckBoxes.add(checkBox);
        }        
    }
    
    public boolean isWordListSelected(){
        return createWordListCheckBox.isSelected();
    }
    
    public List<String> getSelectedAnnotationNames(){
        List<String> result = new ArrayList<>();
        for (JCheckBox cb : annotationNamesCheckBoxes){
            if (cb.isSelected()){
                result.add(cb.getText());
            }
        }
        return result;
    }
    
    
    public boolean approved = false;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        wordListPanel = new javax.swing.JPanel();
        createWordListCheckBox = new javax.swing.JCheckBox();
        annotationTokenListsPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        okCancelPanel = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        corpusNameLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Choose token lists");

        mainPanel.setLayout(new javax.swing.BoxLayout(mainPanel, javax.swing.BoxLayout.Y_AXIS));

        wordListPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Word list"));

        createWordListCheckBox.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        createWordListCheckBox.setText("Create word list");
        wordListPanel.add(createWordListCheckBox);

        mainPanel.add(wordListPanel);

        annotationTokenListsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Annotation token lists"));
        annotationTokenListsPanel.setPreferredSize(new java.awt.Dimension(353, 200));
        annotationTokenListsPanel.setLayout(new java.awt.GridLayout(4, 3));
        mainPanel.add(annotationTokenListsPanel);

        getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);
        getContentPane().add(jPanel1, java.awt.BorderLayout.WEST);

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });
        okCancelPanel.add(okButton);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        okCancelPanel.add(cancelButton);

        getContentPane().add(okCancelPanel, java.awt.BorderLayout.SOUTH);

        jLabel2.setText("Please choose which token lists to generate for ");
        jPanel2.add(jLabel2);

        corpusNameLabel.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        corpusNameLabel.setText("CorpusName");
        jPanel2.add(corpusNameLabel);

        getContentPane().add(jPanel2, java.awt.BorderLayout.PAGE_START);
        getContentPane().add(jPanel3, java.awt.BorderLayout.EAST);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        approved = true;
        dispose();
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChooseTokenListsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChooseTokenListsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChooseTokenListsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChooseTokenListsDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ChooseTokenListsDialog dialog = new ChooseTokenListsDialog(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel annotationTokenListsPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel corpusNameLabel;
    private javax.swing.JCheckBox createWordListCheckBox;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton okButton;
    private javax.swing.JPanel okCancelPanel;
    private javax.swing.JPanel wordListPanel;
    // End of variables declaration//GEN-END:variables
}
