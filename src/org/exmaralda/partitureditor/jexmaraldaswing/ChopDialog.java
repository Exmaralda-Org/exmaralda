/*
 * ChopDialog.java
 *
 * Created on 4. November 2004, 12:22
 */

package org.exmaralda.partitureditor.jexmaraldaswing;

import org.exmaralda.common.helpers.Internationalizer;
import javax.swing.*;
/**
 *
 * @author  thomas
 */
public class ChopDialog extends javax.swing.JDialog {
    
    public boolean changed = false;
    
    /** Creates new form ChopDialog */
    public ChopDialog(java.awt.Frame parent, boolean modal, int maxValue) {
        super(parent, modal);
        initComponents();

        Integer value = Math.round(maxValue/10); 
        Integer min = 0;
        Integer max = maxValue; 
        Integer step = 1; 
        SpinnerNumberModel model = new SpinnerNumberModel(value, min, max, step); 
        tliNumberSpinner.setModel(model);
        Internationalizer.internationalizeDialogToolTips(this);                
    }
    
    public int getMaxValue(){
        return ((Integer)(tliNumberSpinner.getValue())).intValue();
    }
    
    public String getTargetDirectory(){
        return targetDirectoryTextField.getText();
    }
    
    public String getBaseFilename(){
        return baseFilenameTextField.getText();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        mainPanel = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        tliNumberSpinner = new javax.swing.JSpinner();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        targetDirectoryTextField = new javax.swing.JTextField();
        browseButton = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        baseFilenameTextField = new javax.swing.JTextField();
        okCancelPanel = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Chop transcription");
        getAccessibleContext().setAccessibleName("Chop transcription");
        mainPanel.setLayout(new java.awt.GridLayout(3, 1));

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.X_AXIS));

        jLabel1.setText("Minimum number of timeline items: ");
        jLabel1.setToolTipText("Mindestanzahl von Zeitachsen-Intervallen pro Teiltranskription");
        jPanel1.add(jLabel1);

        tliNumberSpinner.setMaximumSize(new java.awt.Dimension(100, 18));
        jPanel1.add(tliNumberSpinner);

        mainPanel.add(jPanel1);

        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.X_AXIS));

        jLabel2.setText("Directory: ");
        jLabel2.setToolTipText("Zielverzeichnis f\u00fcr die Ausgabe");
        jLabel2.setMaximumSize(new java.awt.Dimension(164, 15));
        jLabel2.setPreferredSize(new java.awt.Dimension(164, 15));
        jPanel2.add(jLabel2);

        targetDirectoryTextField.setPreferredSize(new java.awt.Dimension(300, 20));
        targetDirectoryTextField.setMinimumSize(new java.awt.Dimension(200, 20));
        jPanel2.add(targetDirectoryTextField);

        browseButton.setText("Browse...");
        browseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseButtonActionPerformed(evt);
            }
        });

        jPanel2.add(browseButton);

        mainPanel.add(jPanel2);

        jPanel3.setLayout(new javax.swing.BoxLayout(jPanel3, javax.swing.BoxLayout.X_AXIS));

        jLabel3.setText("Base filename: ");
        jLabel3.setToolTipText("Basis-Dateiname f\u00fcr die Ausgabe");
        jLabel3.setPreferredSize(new java.awt.Dimension(164, 15));
        jLabel3.setMaximumSize(new java.awt.Dimension(164, 15));
        jPanel3.add(jLabel3);

        jPanel3.add(baseFilenameTextField);

        mainPanel.add(jPanel3);

        getContentPane().add(mainPanel, java.awt.BorderLayout.CENTER);

        okButton.setText("OK");
        okButton.setPreferredSize(new java.awt.Dimension(65, 23));
        okButton.setMaximumSize(new java.awt.Dimension(65, 23));
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        okCancelPanel.add(okButton);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        okCancelPanel.add(cancelButton);

        getContentPane().add(okCancelPanel, java.awt.BorderLayout.SOUTH);

        pack();
    }
    // </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        // TODO add your handling code here:
        changed = true;
        this.dispose();
    }//GEN-LAST:event_okButtonActionPerformed

    private void browseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseButtonActionPerformed
        // TODO add your handling code here:
        JFileChooser fc = new JFileChooser();
        fc.setDialogTitle("Choose a directory");
        fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int value = fc.showOpenDialog(this);
        if (value==JFileChooser.APPROVE_OPTION){
            targetDirectoryTextField.setText(fc.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_browseButtonActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //new ChopDialog(new javax.swing.JFrame(), true).show();
    }
    
    public void show(){
        java.awt.Dimension dialogSize = this.getPreferredSize();
        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(screenSize.width/2 - dialogSize.width/2, screenSize.height/2 - dialogSize.height/2);        
        super.show();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField baseFilenameTextField;
    private javax.swing.JButton browseButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton okButton;
    private javax.swing.JPanel okCancelPanel;
    private javax.swing.JTextField targetDirectoryTextField;
    private javax.swing.JSpinner tliNumberSpinner;
    // End of variables declaration//GEN-END:variables
    
}
