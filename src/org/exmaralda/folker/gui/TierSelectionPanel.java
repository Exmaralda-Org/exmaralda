/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TierSelectionPanel.java
 *
 * Created on 08.12.2008, 09:14:05
 */

package org.exmaralda.folker.gui;

import java.awt.Container;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.util.HashMap;
import javax.swing.AbstractAction;
import javax.swing.DefaultListModel;
import javax.swing.JComponent;
import javax.swing.JDialog;
import javax.swing.KeyStroke;
import org.exmaralda.folker.utilities.FOLKERInternationalizer;
import org.exmaralda.partitureditor.jexmaralda.BasicTranscription;
import org.exmaralda.partitureditor.jexmaralda.Tier;
import org.exmaralda.partitureditor.jexmaralda.Timeline;

/**
 *
 * @author thomas
 */
public class TierSelectionPanel extends javax.swing.JPanel {

    DefaultListModel listModel;
    HashMap<Integer,Integer> list2tierIndex = new HashMap<>();

    /** Creates new form TierSelectionPanel
     * @param bt
     * @param id1
     * @param id2 */
    public TierSelectionPanel(BasicTranscription bt, String id1, String id2) {
        initComponents();
        listModel = new DefaultListModel();
        Timeline tl = bt.getBody().getCommonTimeline();
        int listIndex = 0;
        for (int pos=0; pos<bt.getBody().getNumberOfTiers(); pos++){
            Tier tier = bt.getBody().getTierAt(pos);
            int intersectorsCount = tier.getEventsIntersecting(tl, id1, id2).size();
            if (intersectorsCount==0){
                listModel.addElement(tier);
                int tierIndex = bt.getBody().lookupID(tier.getID());
                list2tierIndex.put(listIndex, tierIndex);
                listIndex++;
            }
        }
        tierList.setModel(listModel);
        tierList.setVisibleRowCount(listModel.getSize());
        tierList.setPreferredSize(tierList.getPreferredScrollableViewportSize());
        tierList.setCellRenderer(new TierSelectionListCellRenderer(bt));
        
        // new 29-01-2016
        setKeyboardShortcuts();
    }

    public boolean isATierAvailable(){
        return (listModel.size()>0);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tierListScrollPane = new javax.swing.JScrollPane();
        tierList = new javax.swing.JList();
        cancelButton = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(200, 150));
        setLayout(new java.awt.BorderLayout());

        tierListScrollPane.setMinimumSize(new java.awt.Dimension(200, 150));

        tierList.setBorder(javax.swing.BorderFactory.createTitledBorder(FOLKERInternationalizer.getString("misc.selecttier")));
        tierList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        tierList.setMaximumSize(new java.awt.Dimension(200, 110));
        tierList.setMinimumSize(new java.awt.Dimension(150, 110));
        tierList.setPreferredSize(new java.awt.Dimension(150, 110));
        tierList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tierListMouseClicked(evt);
            }
        });
        tierList.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                tierListMouseMoved(evt);
            }
        });
        tierList.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tierListKeyTyped(evt);
            }
        });
        tierListScrollPane.setViewportView(tierList);

        add(tierListScrollPane, java.awt.BorderLayout.CENTER);

        cancelButton.setBackground(new java.awt.Color(255, 255, 255));
        cancelButton.setText("Cancel");
        cancelButton.setOpaque(false);
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        add(cancelButton, java.awt.BorderLayout.SOUTH);
    }// </editor-fold>//GEN-END:initComponents

    private void tierListMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tierListMouseMoved
        tierList.clearSelection();
        int index = tierList.locationToIndex(evt.getPoint());
        tierList.setSelectedIndex(index);
    }//GEN-LAST:event_tierListMouseMoved

    private void tierListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tierListMouseClicked
        tierList.clearSelection();
        int index = tierList.locationToIndex(evt.getPoint());
        tierList.setSelectedIndex(index);
        closeDialog();
    }//GEN-LAST:event_tierListMouseClicked

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        tierList.clearSelection();
        closeDialog();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void tierListKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tierListKeyTyped
        //System.out.println("Key typed!");
        if (evt.getKeyChar()==KeyEvent.VK_ENTER){
            //System.out.println("Enter");
            if (tierList.getSelectedIndex()>=0){
                closeDialog();
            }
        } else if (evt.getKeyChar()==KeyEvent.VK_ESCAPE){
            //System.out.println("Escape");
            tierList.clearSelection();
            closeDialog();
        } 
    }//GEN-LAST:event_tierListKeyTyped

    void closeDialog(){
        Container c = getTopLevelAncestor();
        if (c instanceof JDialog){
            ((JDialog)c).dispose();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    public javax.swing.JList tierList;
    private javax.swing.JScrollPane tierListScrollPane;
    // End of variables declaration//GEN-END:variables

    private void setKeyboardShortcuts() {
        // only do this when you have fewer that 10 entries
        if (listModel.size()>9) return;
        for (int i=0; i<listModel.size(); i++) {
            int tierIndex = this.list2tierIndex.get(i);
            int keyCode = tierIndex+49; // Key 1 has code 49
                        
            String actionName = "KeyAction_" + Integer.toString(i+1);
            //System.out.println(keyName + " " + actionName);
            final int fi = i;
            AbstractAction action = new AbstractAction(){

                @Override
                public void actionPerformed(ActionEvent e) {
                    tierList.setSelectedIndex(fi);
                    closeDialog();
                }
                
            };
            tierList.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(keyCode, 0), actionName);
            tierList.getActionMap().put(actionName, action);
        }
        
    }

}
