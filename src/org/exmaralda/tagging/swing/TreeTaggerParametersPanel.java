/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TreeTaggerParametersPanel.java
 *
 * Created on 24.03.2011, 13:53:03
 */

package org.exmaralda.tagging.swing;

import java.io.File;
import java.util.ArrayList;
import java.util.prefs.Preferences;
import javax.swing.JFileChooser;
import org.exmaralda.partitureditor.jexmaraldaswing.fileFilters.ParameterFileFilter;
import org.exmaralda.tagging.TaggingProfiles;

/**
 *
 * @author thomas
 */
public class TreeTaggerParametersPanel extends javax.swing.JPanel {

    /** Creates new form TreeTaggerParametersPanel */
    public TreeTaggerParametersPanel() {
        initComponents();
        Preferences preferences = java.util.prefs.Preferences.userRoot().node(TaggingProfiles.PREFERENCES_NODE);
        directoryTextField.setText(preferences.get("directory", ""));
        
        parametersFileTextField.setText(preferences.get("parameter-file", ""));
        parametersFileEncodingComboBox.setSelectedItem(preferences.get("parameter-file-encoding", "utf-8"));
        
        abbFileTextField.setText(preferences.get("abbreviations-file", ""));
        abbFileEncodingComboBox.setSelectedItem(preferences.get("abbreviations-file-encoding", "utf-8"));

        lemmasCheckBox.setSelected(preferences.getBoolean("lemma-option", true));
        postagsCheckBox.setSelected(preferences.getBoolean("token-option", true));
        nounknownCheckBox.setSelected(preferences.getBoolean("nounknown-option", true));
    }

    public String treeTaggerDirectory = "S:\\TP-Z2\\TAGGING\\TreeTagger\\bin\\tree-tagger.exe";
    public String parameterFile = "S:\\TP-Z2\\TAGGING\\TreeTagger\\lib\\german.par";
    public String[] options = {"token","lemma","sgml","no-unknown"};

    public String getTreeTaggerDirectory(){
        return directoryTextField.getText();
    }

    public String getParameterFile(){
        return parametersFileTextField.getText();
    }

    public String getParameterFileEncoding(){
        return (String)(parametersFileEncodingComboBox.getSelectedItem());
    }

    public String getAbbreviationsFile(){
        return abbFileTextField.getText();
    }

    public String getAbbreviationsFileEncoding(){
        return (String)(abbFileEncodingComboBox.getSelectedItem());
    }


    public String[] getOptions(){
        // 08-12-2020, changed for issue #228
        ArrayList<String> optionsList = new ArrayList<>();
        optionsList.add("-sgml");
        if (postagsCheckBox.isSelected()){
            optionsList.add("-token");
        }
        if (lemmasCheckBox.isSelected()){
            optionsList.add("-lemma");
        }
        if (nounknownCheckBox.isSelected()){
            optionsList.add("-no-unknown");
        }
        String[] result = new String[optionsList.size()];
        int i=0;
        for (String s : optionsList){
            result[i] = s;
            i++;
        }
        //(String[]) optionsList.toArray();
        return result;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        directoryPanel = new javax.swing.JPanel();
        directoryLabel = new javax.swing.JLabel();
        directoryTextField = new javax.swing.JTextField();
        browseForDirectoryButton = new javax.swing.JButton();
        parameterFilePanel = new javax.swing.JPanel();
        parametersFileLabel = new javax.swing.JLabel();
        parametersFileTextField = new javax.swing.JTextField();
        parametersFileEncodingComboBox = new javax.swing.JComboBox();
        browseForParametersFileButton = new javax.swing.JButton();
        abbFilePanel = new javax.swing.JPanel();
        abbFileLabel = new javax.swing.JLabel();
        abbFileTextField = new javax.swing.JTextField();
        abbFileEncodingComboBox = new javax.swing.JComboBox();
        browseForAbbFileButton = new javax.swing.JButton();
        optionsPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        postagsCheckBox = new javax.swing.JCheckBox();
        lemmasCheckBox = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        nounknownCheckBox = new javax.swing.JCheckBox();

        setBorder(javax.swing.BorderFactory.createTitledBorder("Tree Tagger Parameters"));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        directoryPanel.setLayout(new javax.swing.BoxLayout(directoryPanel, javax.swing.BoxLayout.LINE_AXIS));

        directoryLabel.setText("Tree Tagger Directory: ");
        directoryLabel.setToolTipText("Choose the TOP LEVEL folder of your TreeTagger installation, i.e. the folder containing the \"bin\" directory!");
        directoryPanel.add(directoryLabel);

        directoryTextField.setToolTipText("Choose the TOP LEVEL folder of your TreeTagger installation, i.e. the folder containing the \"bin\" directory!");
        directoryTextField.setMaximumSize(new java.awt.Dimension(2147483647, 30));
        directoryTextField.setPreferredSize(new java.awt.Dimension(300, 20));
        directoryPanel.add(directoryTextField);

        browseForDirectoryButton.setText("Browse...");
        browseForDirectoryButton.setToolTipText("Choose the TOP LEVEL folder of your TreeTagger installation, i.e. the folder containing the \"bin\" directory!");
        browseForDirectoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseForDirectoryButtonActionPerformed(evt);
            }
        });
        directoryPanel.add(browseForDirectoryButton);

        add(directoryPanel);

        parameterFilePanel.setLayout(new javax.swing.BoxLayout(parameterFilePanel, javax.swing.BoxLayout.LINE_AXIS));

        parametersFileLabel.setText("Parameters file: ");
        parametersFileLabel.setToolTipText("Choose a suitable tree tagger parameter file (suffix *.par)");
        parametersFileLabel.setMaximumSize(new java.awt.Dimension(113, 14));
        parametersFileLabel.setMinimumSize(new java.awt.Dimension(113, 14));
        parametersFileLabel.setPreferredSize(new java.awt.Dimension(113, 14));
        parameterFilePanel.add(parametersFileLabel);

        parametersFileTextField.setMaximumSize(new java.awt.Dimension(2147483647, 30));
        parametersFileTextField.setPreferredSize(new java.awt.Dimension(300, 20));
        parameterFilePanel.add(parametersFileTextField);

        parametersFileEncodingComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "utf-8", "iso8859-1" }));
        parametersFileEncodingComboBox.setMaximumSize(new java.awt.Dimension(32767, 30));
        parameterFilePanel.add(parametersFileEncodingComboBox);

        browseForParametersFileButton.setText("Browse...");
        browseForParametersFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseForParametersFileButtonActionPerformed(evt);
            }
        });
        parameterFilePanel.add(browseForParametersFileButton);

        add(parameterFilePanel);

        abbFilePanel.setLayout(new javax.swing.BoxLayout(abbFilePanel, javax.swing.BoxLayout.LINE_AXIS));

        abbFileLabel.setText("Abbreviations file: ");
        abbFileLabel.setMaximumSize(new java.awt.Dimension(113, 14));
        abbFileLabel.setMinimumSize(new java.awt.Dimension(113, 14));
        abbFileLabel.setPreferredSize(new java.awt.Dimension(113, 14));
        abbFilePanel.add(abbFileLabel);

        abbFileTextField.setMaximumSize(new java.awt.Dimension(2147483647, 30));
        abbFileTextField.setPreferredSize(new java.awt.Dimension(300, 20));
        abbFilePanel.add(abbFileTextField);

        abbFileEncodingComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "utf-8", "iso8859-1" }));
        abbFileEncodingComboBox.setMaximumSize(new java.awt.Dimension(32767, 30));
        abbFilePanel.add(abbFileEncodingComboBox);

        browseForAbbFileButton.setText("Browse...");
        browseForAbbFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseForAbbFileButtonActionPerformed(evt);
            }
        });
        abbFilePanel.add(browseForAbbFileButton);

        add(abbFilePanel);

        optionsPanel.setLayout(new javax.swing.BoxLayout(optionsPanel, javax.swing.BoxLayout.LINE_AXIS));

        jLabel3.setText("Output:");
        jLabel3.setMaximumSize(new java.awt.Dimension(60, 14));
        jLabel3.setMinimumSize(new java.awt.Dimension(60, 14));
        jLabel3.setPreferredSize(new java.awt.Dimension(60, 14));
        optionsPanel.add(jLabel3);

        postagsCheckBox.setSelected(true);
        postagsCheckBox.setText("Part of Speech Tags");
        optionsPanel.add(postagsCheckBox);

        lemmasCheckBox.setSelected(true);
        lemmasCheckBox.setText("Lemmas");
        optionsPanel.add(lemmasCheckBox);

        jLabel1.setText("Further options: ");
        jLabel1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 20, 1, 1));
        optionsPanel.add(jLabel1);

        nounknownCheckBox.setSelected(true);
        nounknownCheckBox.setText("no unknown");
        optionsPanel.add(nounknownCheckBox);

        add(optionsPanel);
    }// </editor-fold>//GEN-END:initComponents

    private void browseForDirectoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseForDirectoryButtonActionPerformed
        JFileChooser jfc = new JFileChooser();
        jfc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        jfc.setDialogTitle("Locate the TreeTagger installation directory");
        jfc.setCurrentDirectory(new File(directoryTextField.getText()));
        int a = jfc.showOpenDialog(this);
        if (a == JFileChooser.APPROVE_OPTION){
            directoryTextField.setText(jfc.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_browseForDirectoryButtonActionPerformed

    private void browseForParametersFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseForParametersFileButtonActionPerformed
        JFileChooser jfc = new JFileChooser();
        jfc.setDialogTitle("Locate a TreeTagger parameters file");
        jfc.setFileFilter(new ParameterFileFilter("par", "TreeTagger Parameter Files (*.par)"));
        jfc.setCurrentDirectory(new File(directoryTextField.getText()));
        int a = jfc.showOpenDialog(this);
        if (a == JFileChooser.APPROVE_OPTION){
            parametersFileTextField.setText(jfc.getSelectedFile().getAbsolutePath());
        }
    }//GEN-LAST:event_browseForParametersFileButtonActionPerformed

    private void browseForAbbFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseForAbbFileButtonActionPerformed
        JFileChooser jfc = new JFileChooser();
        jfc.setDialogTitle("Locate a TreeTagger abbreviations file");
        // abbreviation file(s) don't seem to have a suffix??
        //jfc.setFileFilter(new ParameterFileFilter("abbreviations", "TreeTagger Abbreviations file (*-abbreviations)"));
        jfc.setCurrentDirectory(new File(directoryTextField.getText()));
        int a = jfc.showOpenDialog(this);
        if (a == JFileChooser.APPROVE_OPTION){
            abbFileTextField.setText(jfc.getSelectedFile().getAbsolutePath());
        }

    }//GEN-LAST:event_browseForAbbFileButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox abbFileEncodingComboBox;
    private javax.swing.JLabel abbFileLabel;
    private javax.swing.JPanel abbFilePanel;
    private javax.swing.JTextField abbFileTextField;
    private javax.swing.JButton browseForAbbFileButton;
    private javax.swing.JButton browseForDirectoryButton;
    private javax.swing.JButton browseForParametersFileButton;
    private javax.swing.JLabel directoryLabel;
    private javax.swing.JPanel directoryPanel;
    private javax.swing.JTextField directoryTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JCheckBox lemmasCheckBox;
    private javax.swing.JCheckBox nounknownCheckBox;
    private javax.swing.JPanel optionsPanel;
    private javax.swing.JPanel parameterFilePanel;
    private javax.swing.JComboBox parametersFileEncodingComboBox;
    private javax.swing.JLabel parametersFileLabel;
    private javax.swing.JTextField parametersFileTextField;
    private javax.swing.JCheckBox postagsCheckBox;
    // End of variables declaration//GEN-END:variables

    public void hideOptionsPanel() {
        this.optionsPanel.setVisible(false);
    }

}
